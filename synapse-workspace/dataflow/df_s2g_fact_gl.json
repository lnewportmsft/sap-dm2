{
	"name": "df_s2g_fact_gl",
	"properties": {
		"folder": {
			"name": "SIlver_To_Gold"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "IDEBITCREDITCODE"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "AcdocaSilverSource"
				},
				{
					"dataset": {
						"referenceName": "ds_metadata",
						"type": "DatasetReference"
					},
					"name": "getTimestamp",
					"description": "Import data from ds_metadata"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "IFISCALPERIODFORVARIANT"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "IGLACCOUNTINCHARTOFACCOUNTS"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "ICOMPANYCODE"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "ISEGMENT"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "IFUNCTIONALAREA"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "IACCOUNTINGDOCUMENTTYPE"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "IGLOBALCOMPANY"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "IFISCALYEARFORCOMPANYCODE"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "IFISCALYEARVARIANT"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "IWBSELEMENTDATA2"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "IWBSELEMENTBASICDATA"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "IMASTERFIXEDASSET"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "IASSETTRANSACTIONTYPE"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "ILEDGER"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "IFIXEDASSET"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "IASSETCLASS"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "IWBSELEMENT"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "IEQUIPMENT"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "ICHARTOFACCOUNTS"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "IBUSINESSAREA"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "IPLANT"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "IPRODUCT"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "ISUPPLIER"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "IPRODUCTGROUP2"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "ICUSTOMER"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "ICONTROLLINGAREA"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "ICOSTCENTER"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "IPROFITCENTER"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "IFUNCTIONALLOCATION"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "GoldUpsertDataLakeTarget"
				},
				{
					"dataset": {
						"referenceName": "ds_metadata",
						"type": "DatasetReference"
					},
					"name": "updateLastProcessedTimestamp"
				},
				{
					"linkedService": {
						"referenceName": "ls_SQLPool",
						"type": "LinkedServiceReference"
					},
					"name": "GoldUpsertSQLPoolTarget"
				}
			],
			"transformations": [
				{
					"name": "setLastProcessedTimestamp"
				},
				{
					"name": "selectLastProcessedTimestampPerSystem"
				},
				{
					"name": "GetAcdocaRecordsWithMaxTimeStampOnly"
				},
				{
					"name": "JoinWithIDEBITCREDITCODE"
				},
				{
					"name": "AddKeyIDEBITCREDITCODE"
				},
				{
					"name": "JoinWithIFISCALPERIODFORVARIANT"
				},
				{
					"name": "AddKeyIFISCALPERIODFORVARIANT"
				},
				{
					"name": "JoinWithIGLACCOUNTINCHARTOFACCOUNTS"
				},
				{
					"name": "AddKeyIGLACCOUNTINCHARTOFACCOUNTS"
				},
				{
					"name": "JoinWithICOMPANYCODE"
				},
				{
					"name": "AddKeyICOMPANYCODE"
				},
				{
					"name": "JoinWithISEGMENT"
				},
				{
					"name": "AddKeyISEGMENT"
				},
				{
					"name": "JoinWithIFUNCTIONALAREA"
				},
				{
					"name": "AddKeyIFUNCTIONALAREA"
				},
				{
					"name": "JoinWithIACCOUNTINGDOCUMENTTYPE"
				},
				{
					"name": "AddKeyIACCOUNTINGDOCUMENTTYPE"
				},
				{
					"name": "JoinWithPARTNERCOMPANY"
				},
				{
					"name": "AddKeyPARTNERCOMPANY"
				},
				{
					"name": "JoinWithCOMPANY"
				},
				{
					"name": "AddKeyCOMPANY"
				},
				{
					"name": "JoinWithIFISCALYEARFORCOMPANYCODE"
				},
				{
					"name": "AddKeyIFISCALYEARFORCOMPANYCODE"
				},
				{
					"name": "JoinWithIFISCALYEARVARIANT"
				},
				{
					"name": "AddKeyIFISCALYEARVARIANT"
				},
				{
					"name": "JoinWithIWBSELEMENTDATA2"
				},
				{
					"name": "AddKeyIWBSELEMENTDATA2"
				},
				{
					"name": "JoinWithIASSETTRANSACTIONTYPE"
				},
				{
					"name": "AddKeyIASSETTRANSACTIONTYPE"
				},
				{
					"name": "JoinWithILEDGER"
				},
				{
					"name": "AddKeyILEDGER"
				},
				{
					"name": "JoinWithIFIXEDASSET"
				},
				{
					"name": "AddKeyIFIXEDASSET"
				},
				{
					"name": "JoinWithIASSETCLASS"
				},
				{
					"name": "AddKeyIASSETCLASS"
				},
				{
					"name": "JoinWithIEQUIPMENT"
				},
				{
					"name": "AddKeyIEQUIPMENT"
				},
				{
					"name": "JoinWithICHARTOFACCOUNTS"
				},
				{
					"name": "AddKeyICHARTOFACCOUNTS"
				},
				{
					"name": "JoinWithIBUSINESSAREA"
				},
				{
					"name": "AddKeyIBUSINESSAREA"
				},
				{
					"name": "JoinWithIPLANT"
				},
				{
					"name": "AddKeyIPLANT"
				},
				{
					"name": "JoinWithIPRODUCT"
				},
				{
					"name": "AddKeyIPRODUCT"
				},
				{
					"name": "JoinWithISUPPLIER"
				},
				{
					"name": "AddKeyISUPPLIER"
				},
				{
					"name": "JoinWithIPRODUCTGROUP2"
				},
				{
					"name": "AddKeyIPRODUCTGROUP2"
				},
				{
					"name": "JoinWithICUSTOMER"
				},
				{
					"name": "AddKeyICUSTOMER"
				},
				{
					"name": "JoinWithICONTROLLINGAREA"
				},
				{
					"name": "AddKeyICONTROLLINGAREA"
				},
				{
					"name": "AlterUpsert"
				},
				{
					"name": "getNewMaxTimestamp"
				},
				{
					"name": "retrieveOldTimestamp"
				},
				{
					"name": "setRowToUpdateTimestamp"
				},
				{
					"name": "allowUpdateLastProcessedTimestamp"
				},
				{
					"name": "JoinWithICOSTCENTER"
				},
				{
					"name": "AddKeyICOSTCENTER"
				},
				{
					"name": "JoinWithIPROFITCENTER"
				},
				{
					"name": "AddKeyIPROFITCENTER"
				},
				{
					"name": "JoinWithIFUNCTIONALLOCATION"
				},
				{
					"name": "AddKeyIFUNCTIONALLOCATION"
				},
				{
					"name": "ReplaceNULLDimensions"
				},
				{
					"name": "selectICOSTCENTER"
				},
				{
					"name": "distinctICOSTCENTER"
				},
				{
					"name": "selectIPROFITCENTER"
				},
				{
					"name": "distinctIPROFITCENTER"
				}
			],
			"scriptLines": [
				"parameters{",
				"     p_name as string (\"I_GLACCOUNTLINEITEMRAWDATA\"),",
				"     p_directory as string (\"data\"),",
				"     p_container as string (\"sap\"),",
				"     p_systemName as string (\"FLAVIOVM\")",
				"}",
				"source(output(",
				"          DEBITCREDITCODE as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat('data/', $p_systemName,'/gold/','I_DEBITCREDITCODE'))) ~> IDEBITCREDITCODE",
				"source(output(",
				"          SOURCELEDGER as string,",
				"          COMPANYCODE as string,",
				"          FISCALYEAR as integer,",
				"          ACCOUNTINGDOCUMENT as string,",
				"          LEDGERGLLINEITEM as string,",
				"          LEDGERFISCALYEAR as integer,",
				"          GLRECORDTYPE as string,",
				"          JRNLENTRALTVFYCONSECUTIVEID as string,",
				"          CHARTOFACCOUNTS as string,",
				"          CONTROLLINGAREA as string,",
				"          FINANCIALTRANSACTIONTYPE as string,",
				"          GLBUSINESSTRANSACTIONTYPE as string,",
				"          BUSINESSTRANSACTIONCATEGORY as string,",
				"          BUSINESSTRANSACTIONTYPE as string,",
				"          FINANCIALCLOSINGSTEP as integer,",
				"          CONTROLLINGBUSTRANSACTYPE as string,",
				"          REFERENCEDOCUMENTTYPE as string,",
				"          LOGICALSYSTEM as string,",
				"          REFERENCEDOCUMENTCONTEXT as string,",
				"          REFERENCEDOCUMENT as string,",
				"          REFERENCEDOCUMENTITEM as integer,",
				"          REFERENCEDOCUMENTITEMGROUP as integer,",
				"          TRANSACTIONSUBITEM as integer,",
				"          ISREVERSAL as string,",
				"          ISREVERSED as string,",
				"          REVERSALREFERENCEDOCUMENTCNTXT as string,",
				"          REVERSALREFERENCEDOCUMENT as string,",
				"          REVERSALTRANSACTIONSUBITEM as integer,",
				"          ISSETTLEMENT as string,",
				"          ISSETTLED as string,",
				"          PREDECESSORREFERENCEDOCTYPE as string,",
				"          PREDECESSORREFERENCEDOCCNTXT as string,",
				"          PREDECESSORREFERENCEDOCUMENT as string,",
				"          PREDECESSORREFERENCEDOCITEM as integer,",
				"          PRDCSSRJOURNALENTRYCOMPANYCODE as string,",
				"          PRDCSSRJOURNALENTRYFISCALYEAR as integer,",
				"          PREDECESSORJOURNALENTRY as string,",
				"          PREDECESSORJOURNALENTRYITEM as string,",
				"          SOURCEREFERENCEDOCUMENTTYPE as string,",
				"          SOURCELOGICALSYSTEM as string,",
				"          SOURCEREFERENCEDOCUMENTCNTXT as string,",
				"          SOURCEREFERENCEDOCUMENT as string,",
				"          SOURCEREFERENCEDOCUMENTITEM as integer,",
				"          SOURCEREFERENCEDOCSUBITEM as integer,",
				"          ISCOMMITMENT as string,",
				"          JRNLENTRYITEMOBSOLETEREASON as string,",
				"          JOURNALENTRYISSECONDARYENTRY as string,",
				"          JRNLPERIODENDCLOSINGRUNLOGUUID as binary,",
				"          ORGANIZATIONALCHANGE as string,",
				"          GLACCOUNT as string,",
				"          COSTCENTER as string,",
				"          PROFITCENTER as string,",
				"          FUNCTIONALAREA as string,",
				"          BUSINESSAREA as string,",
				"          SEGMENT as string,",
				"          PARTNERCOSTCENTER as string,",
				"          PARTNERPROFITCENTER as string,",
				"          PARTNERFUNCTIONALAREA as string,",
				"          PARTNERBUSINESSAREA as string,",
				"          PARTNERCOMPANY as string,",
				"          PARTNERSEGMENT as string,",
				"          BALANCETRANSACTIONCURRENCY as string,",
				"          AMOUNTINBALANCETRANSACCRCY as decimal(25,2),",
				"          TRANSACTIONCURRENCY as string,",
				"          AMOUNTINTRANSACTIONCURRENCY as decimal(25,2),",
				"          COMPANYCODECURRENCY as string,",
				"          AMOUNTINCOMPANYCODECURRENCY as decimal(25,2),",
				"          GLOBALCURRENCY as string,",
				"          AMOUNTINGLOBALCURRENCY as decimal(25,2),",
				"          FUNCTIONALCURRENCY as string,",
				"          AMOUNTINFUNCTIONALCURRENCY as decimal(25,2),",
				"          FREEDEFINEDCURRENCY1 as string,",
				"          AMOUNTINFREEDEFINEDCURRENCY1 as decimal(25,2),",
				"          FREEDEFINEDCURRENCY2 as string,",
				"          AMOUNTINFREEDEFINEDCURRENCY2 as decimal(25,2),",
				"          FREEDEFINEDCURRENCY3 as string,",
				"          AMOUNTINFREEDEFINEDCURRENCY3 as decimal(25,2),",
				"          FREEDEFINEDCURRENCY4 as string,",
				"          AMOUNTINFREEDEFINEDCURRENCY4 as decimal(25,2),",
				"          FREEDEFINEDCURRENCY5 as string,",
				"          AMOUNTINFREEDEFINEDCURRENCY5 as decimal(25,2),",
				"          FREEDEFINEDCURRENCY6 as string,",
				"          AMOUNTINFREEDEFINEDCURRENCY6 as decimal(25,2),",
				"          FREEDEFINEDCURRENCY7 as string,",
				"          AMOUNTINFREEDEFINEDCURRENCY7 as decimal(25,2),",
				"          FREEDEFINEDCURRENCY8 as string,",
				"          AMOUNTINFREEDEFINEDCURRENCY8 as decimal(25,2),",
				"          FIXEDAMOUNTINGLOBALCRCY as decimal(25,2),",
				"          GRPVALNFIXEDAMTINGLOBCRCY as decimal(25,2),",
				"          PRFTCTRVALNFXDAMTINGLOBCRCY as decimal(25,2),",
				"          FIXEDAMOUNTINCOCODECRCY as decimal(25,2),",
				"          FIXEDAMOUNTINTRANSCRCY as decimal(25,2),",
				"          TOTALPRICEVARCINGLOBALCRCY as decimal(25,2),",
				"          GRPVALNTOTPRCVARCINGLOBCRCY as decimal(25,2),",
				"          PRFTCTRVALNTOTPRCVARCINGLBCRCY as decimal(25,2),",
				"          FIXEDPRICEVARCINGLOBALCRCY as decimal(25,2),",
				"          GRPVALNFIXEDPRCVARCINGLOBCRCY as decimal(25,2),",
				"          PRFTCTRVALNFXDPRCVARCINGLBCRCY as decimal(25,2),",
				"          CONTROLLINGOBJECTCURRENCY as string,",
				"          AMOUNTINOBJECTCURRENCY as decimal(25,2),",
				"          GRANTCURRENCY as string,",
				"          AMOUNTINGRANTCURRENCY as decimal(25,2),",
				"          BASEUNIT as string,",
				"          QUANTITY as decimal(26,3),",
				"          FIXEDQUANTITY as decimal(26,3),",
				"          COSTSOURCEUNIT as string,",
				"          VALUATIONQUANTITY as decimal(26,3),",
				"          VALUATIONFIXEDQUANTITY as decimal(26,3),",
				"          REFERENCEQUANTITYUNIT as string,",
				"          REFERENCEQUANTITY as decimal(26,3),",
				"          ADDITIONALQUANTITY1UNIT as string,",
				"          ADDITIONALQUANTITY1 as decimal(26,3),",
				"          ADDITIONALQUANTITY2UNIT as string,",
				"          ADDITIONALQUANTITY2 as decimal(26,3),",
				"          ADDITIONALQUANTITY3UNIT as string,",
				"          ADDITIONALQUANTITY3 as decimal(26,3),",
				"          DEBITCREDITCODE as string,",
				"          FISCALPERIOD as integer,",
				"          FISCALYEARVARIANT as string,",
				"          FISCALYEARPERIOD as integer,",
				"          POSTINGDATE as date,",
				"          DOCUMENTDATE as date,",
				"          ACCOUNTINGDOCUMENTTYPE as string,",
				"          ACCOUNTINGDOCUMENTITEM as integer,",
				"          ASSIGNMENTREFERENCE as string,",
				"          ACCOUNTINGDOCUMENTCATEGORY as string,",
				"          JOURNALENTRYITEMCATEGORY as string,",
				"          POSTINGKEY as string,",
				"          TRANSACTIONTYPEDETERMINATION as string,",
				"          SUBLEDGERACCTLINEITEMTYPE as integer,",
				"          ACCOUNTINGDOCCREATEDBYUSER as string,",
				"          LASTCHANGEDATETIME as decimal(15,0),",
				"          CREATIONDATETIME as decimal(15,0),",
				"          CREATIONDATE as date,",
				"          ELIMINATIONPROFITCENTER as string,",
				"          ORIGINOBJECTTYPE as integer,",
				"          GLACCOUNTTYPE as string,",
				"          ALTERNATIVEGLACCOUNT as string,",
				"          COUNTRYCHARTOFACCOUNTS as string,",
				"          ITEMISSPLIT as string,",
				"          CONSOLIDATIONUNIT as string,",
				"          PARTNERCONSOLIDATIONUNIT as string,",
				"          COMPANY as string,",
				"          CONSOLIDATIONCHARTOFACCOUNTS as string,",
				"          CNSLDTNFINANCIALSTATEMENTITEM as string,",
				"          CNSLDTNSUBITEMCATEGORY as string,",
				"          CNSLDTNSUBITEM as string,",
				"          INVOICEREFERENCE as string,",
				"          INVOICEREFERENCEFISCALYEAR as integer,",
				"          FOLLOWONDOCUMENTTYPE as string,",
				"          INVOICEITEMREFERENCE as integer,",
				"          REFERENCEPURCHASEORDERCATEGORY as integer,",
				"          PURCHASINGDOCUMENT as string,",
				"          PURCHASINGDOCUMENTITEM as integer,",
				"          ACCOUNTASSIGNMENTNUMBER as integer,",
				"          DOCUMENTITEMTEXT as string,",
				"          SALESDOCUMENT as string,",
				"          SALESDOCUMENTITEM as integer,",
				"          PRODUCT as string,",
				"          PLANT as string,",
				"          SUPPLIER as string,",
				"          CUSTOMER as string,",
				"          SERVICESRENDEREDDATE as date,",
				"          PERFORMANCEPERIODSTARTDATE as date,",
				"          PERFORMANCEPERIODENDDATE as date,",
				"          CONDITIONCONTRACT as string,",
				"          EXCHANGERATEDATE as date,",
				"          FINANCIALACCOUNTTYPE as string,",
				"          SPECIALGLCODE as string,",
				"          TAXCODE as string,",
				"          TAXCOUNTRY as string,",
				"          HOUSEBANK as string,",
				"          HOUSEBANKACCOUNT as string,",
				"          ISOPENITEMMANAGED as string,",
				"          CLEARINGDATE as date,",
				"          CLEARINGDOCFISCALYEAR as integer,",
				"          CLEARINGACCOUNTINGDOCUMENT as string,",
				"          CLEARINGJOURNALENTRYFISCALYEAR as integer,",
				"          CLEARINGJOURNALENTRY as string,",
				"          VALUEDATE as date,",
				"          GENERALLEDGERAGINGSCOPE as string,",
				"          GENERALLEDGERAGINGINCREMENT as string,",
				"          ASSETDEPRECIATIONAREA as integer,",
				"          MASTERFIXEDASSET as string,",
				"          FIXEDASSET as string,",
				"          ASSETVALUEDATE as date,",
				"          ASSETTRANSACTIONTYPE as string,",
				"          ASSETACCTTRANSCLASSFCTN as string,",
				"          DEPRECIATIONFISCALPERIOD as integer,",
				"          GROUPMASTERFIXEDASSET as string,",
				"          GROUPFIXEDASSET as string,",
				"          ASSETCLASS as string,",
				"          PARTNERMASTERFIXEDASSET as string,",
				"          PARTNERFIXEDASSET as string,",
				"          COSTESTIMATE as integer,",
				"          INVENTORYSPECIALSTOCKVALNTYPE as string,",
				"          ISSUPPLIERSTOCKVALUATION as string,",
				"          INVENTORYSPECIALSTOCKTYPE as string,",
				"          INVENTORYSPCLSTKSALESDOCUMENT as string,",
				"          INVENTORYSPCLSTKSALESDOCITM as integer,",
				"          INVTRYSPCLSTOCKWBSELMNTINTID as integer,",
				"          INVENTORYSPCLSTOCKWBSELEMENT as string,",
				"          INVENTORYSPECIALSTOCKSUPPLIER as string,",
				"          INVENTORYVALUATIONTYPE as string,",
				"          VALUATIONAREA as string,",
				"          MATERIALLEDGERPROCESSTYPE as string,",
				"          MATERIALLEDGERCATEGORY as string,",
				"          SLSPRICEAMOUNTINCOCODECRCY as decimal(25,2),",
				"          PRODUCTPRICECONTROL as string,",
				"          SENDERCOMPANYCODE as string,",
				"          SENDERGLACCOUNT as string,",
				"          SENDERACCOUNTASSIGNMENT as string,",
				"          SENDERACCOUNTASSIGNMENTTYPE as string,",
				"          CONTROLLINGOBJECT as string,",
				"          COSTORIGINGROUP as string,",
				"          ORIGINSENDEROBJECT as string,",
				"          CONTROLLINGDEBITCREDITCODE as string,",
				"          ORIGINCTRLGDEBITCREDITCODE as string,",
				"          CONTROLLINGOBJECTDEBITTYPE as integer,",
				"          QUANTITYISINCOMPLETE as integer,",
				"          OFFSETTINGACCOUNT as string,",
				"          OFFSETTINGACCOUNTTYPE as string,",
				"          OFFSETTINGCHARTOFACCOUNTS as string,",
				"          LINEITEMISCOMPLETED as string,",
				"          PERSONNELNUMBER as integer,",
				"          CONTROLLINGOBJECTCLASS as string,",
				"          PARTNERCOMPANYCODE as string,",
				"          PARTNERCONTROLLINGOBJECTCLASS as string,",
				"          ORIGINPROFITCENTER as string,",
				"          ORIGINORDER as string,",
				"          ORIGINCOSTCTRACTIVITYTYPE as string,",
				"          ORIGINCOSTCENTER as string,",
				"          ORIGINPRODUCT as string,",
				"          VARIANCEORIGINGLACCOUNT as string,",
				"          ACCOUNTASSIGNMENT as string,",
				"          ACCOUNTASSIGNMENTTYPE as string,",
				"          COSTCTRACTIVITYTYPE as string,",
				"          ORDERID as string,",
				"          ORDERCATEGORY as integer,",
				"          WBSELEMENTINTERNALID as integer,",
				"          WBSELEMENT as string,",
				"          PARTNERWBSELEMENTINTERNALID as integer,",
				"          PARTNERWBSELEMENT as string,",
				"          PROJECTINTERNALID as integer,",
				"          PROJECT as string,",
				"          PARTNERPROJECTINTERNALID as integer,",
				"          PARTNERPROJECT as string,",
				"          OPERATINGCONCERN as string,",
				"          PROJECTNETWORK as string,",
				"          RELATEDNETWORKACTIVITY as string,",
				"          BUSINESSPROCESS as string,",
				"          COSTOBJECT as string,",
				"          BILLABLECONTROL as string,",
				"          COSTANALYSISRESOURCE as string,",
				"          CUSTOMERSERVICENOTIFICATION as string,",
				"          SERVICEDOCUMENTTYPE as string,",
				"          SERVICEDOCUMENT as string,",
				"          SERVICEDOCUMENTITEM as integer,",
				"          PARTNERSERVICEDOCUMENTTYPE as string,",
				"          PARTNERSERVICEDOCUMENT as string,",
				"          PARTNERSERVICEDOCUMENTITEM as integer,",
				"          SERVICECONTRACTTYPE as string,",
				"          SERVICECONTRACT as string,",
				"          SERVICECONTRACTITEM as integer,",
				"          BUSINESSSOLUTIONORDER as string,",
				"          BUSINESSSOLUTIONORDERITEM as integer,",
				"          PROVIDERCONTRACT as string,",
				"          PROVIDERCONTRACTITEM as integer,",
				"          REVENUEACCOUNTINGCONTRACT as string,",
				"          PERFORMANCEOBLIGATION as string,",
				"          TIMESHEETOVERTIMECATEGORY as string,",
				"          PARTNERACCOUNTASSIGNMENT as string,",
				"          PARTNERACCOUNTASSIGNMENTTYPE as string,",
				"          WORKPACKAGE as string,",
				"          WORKITEM as string,",
				"          PARTNERCOSTCTRACTIVITYTYPE as string,",
				"          PARTNERORDER as string,",
				"          PARTNERORDERCATEGORY as integer,",
				"          PARTNERSALESDOCUMENT as string,",
				"          PARTNERSALESDOCUMENTITEM as integer,",
				"          PARTNERPROJECTNETWORK as string,",
				"          PARTNERPROJECTNETWORKACTIVITY as string,",
				"          PARTNERBUSINESSPROCESS as string,",
				"          PARTNERCOSTOBJECT as string,",
				"          CONTROLLINGDOCUMENTITEM as integer,",
				"          VARIANCEORIGINGROUP as string,",
				"          BILLINGDOCUMENTTYPE as string,",
				"          SALESORGANIZATION as string,",
				"          DISTRIBUTIONCHANNEL as string,",
				"          ORGANIZATIONDIVISION as string,",
				"          SOLDPRODUCT as string,",
				"          SOLDPRODUCTGROUP as string,",
				"          CUSTOMERGROUP as string,",
				"          CUSTOMERSUPPLIERCOUNTRY as string,",
				"          CUSTOMERSUPPLIERINDUSTRY as string,",
				"          SALESDISTRICT as string,",
				"          BILLTOPARTY as string,",
				"          SHIPTOPARTY as string,",
				"          CUSTOMERSUPPLIERCORPORATEGROUP as string,",
				"          CASHLEDGERCOMPANYCODE as string,",
				"          CASHLEDGERACCOUNT as string,",
				"          FINANCIALMANAGEMENTAREA as string,",
				"          FUNDSCENTER as string,",
				"          FUNDEDPROGRAM as string,",
				"          FUND as string,",
				"          GRANTID as string,",
				"          BUDGETPERIOD as string,",
				"          PARTNERFUND as string,",
				"          PARTNERGRANT as string,",
				"          PARTNERBUDGETPERIOD as string,",
				"          PUBSECBUDGETACCOUNT as string,",
				"          PUBSECBUDGETACCOUNTCOCODE as string,",
				"          PUBSECBUDGETCNSMPNDATE as date,",
				"          PUBSECBUDGETCNSMPNFSCLPERIOD as integer,",
				"          PUBSECBUDGETCNSMPNFSCLYEAR as integer,",
				"          PUBSECBUDGETISRELEVANT as string,",
				"          PUBSECBUDGETCNSMPNTYPE as string,",
				"          PUBSECBUDGETCNSMPNAMTTYPE as string,",
				"          SPONSOREDPROGRAM as string,",
				"          SPONSOREDCLASS as string,",
				"          GTEEMBUDGETVALIDITYNUMBER as string,",
				"          JOINTVENTURE as string,",
				"          JOINTVENTUREEQUITYGROUP as string,",
				"          JOINTVENTURECOSTRECOVERYCODE as string,",
				"          JOINTVENTUREPARTNER as string,",
				"          JOINTVENTUREBILLINGTYPE as string,",
				"          JOINTVENTUREEQUITYTYPE as string,",
				"          JOINTVENTUREPRODUCTIONDATE as date,",
				"          JOINTVENTUREBILLINGDATE as date,",
				"          JOINTVENTUREOPERATIONALDATE as date,",
				"          CUTBACKRUN as decimal(28,7),",
				"          JOINTVENTUREACCOUNTINGACTIVITY as string,",
				"          PARTNERVENTURE as string,",
				"          PARTNEREQUITYGROUP as string,",
				"          SENDERCOSTRECOVERYCODE as string,",
				"          CUTBACKACCOUNT as string,",
				"          CUTBACKCOSTOBJECT as string,",
				"          REBUSINESSENTITY as string,",
				"          REALESTATEBUILDING as string,",
				"          REALESTATEPROPERTY as string,",
				"          RERENTALOBJECT as string,",
				"          REALESTATECONTRACT as string,",
				"          RESERVICECHARGEKEY as string,",
				"          RESETTLEMENTUNITID as string,",
				"          SETTLEMENTREFERENCEDATE as date,",
				"          REPARTNERBUSINESSENTITY as string,",
				"          REALESTATEPARTNERBUILDING as string,",
				"          REALESTATEPARTNERPROPERTY as string,",
				"          REPARTNERRENTALOBJECT as string,",
				"          REALESTATEPARTNERCONTRACT as string,",
				"          REPARTNERSERVICECHARGEKEY as string,",
				"          REPARTNERSETTLEMENTUNITID as string,",
				"          PARTNERSETTLEMENTREFERENCEDATE as date,",
				"          ACCRUALOBJECTTYPE as string,",
				"          ACCRUALOBJECTLOGICALSYSTEM as string,",
				"          ACCRUALOBJECT as string,",
				"          ACCRUALSUBOBJECT as string,",
				"          ACCRUALITEMTYPE as string,",
				"          ACCRUALREFERENCEOBJECT as string,",
				"          ACCRUALVALUEDATE as date,",
				"          FINANCIALVALUATIONOBJECTTYPE as string,",
				"          FINANCIALVALUATIONOBJECT as string,",
				"          FINANCIALVALUATIONSUBOBJECT as string,",
				"          NETDUEDATE as date,",
				"          CREDITRISKCLASS as string,",
				"          WORKCENTERINTERNALID as integer,",
				"          ORDEROPERATION as string,",
				"          ORDERITEM as integer,",
				"          PARTNERORDERITEM as integer,",
				"          ORDERSUBOPERATION as string,",
				"          EQUIPMENT as string,",
				"          FUNCTIONALLOCATION as string,",
				"          ASSEMBLY as string,",
				"          MAINTENANCEACTIVITYTYPE as string,",
				"          MAINTENANCEORDERPLANNINGCODE as string,",
				"          MAINTPRIORITYTYPE as string,",
				"          MAINTPRIORITY as string,",
				"          SUPERIORORDER as string,",
				"          PRODUCTGROUP as string,",
				"          MAINTENANCEORDERISPLANNED as string,",
				"          ORIGINORDEROPERATION as string,",
				"          JRNLENTRYITEMMIGRATIONSOURCE as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat($p_directory, '/', $p_systemName,'/silver/','I_GLACCOUNTLINEITEMRAWDATA'))) ~> AcdocaSilverSource",
				"source(output(",
				"          CDSViewName as string,",
				"          inScope as boolean,",
				"          systemName as string,",
				"          checkpointId as string,",
				"          maxId as long,",
				"          lastProcessedTimestamp as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: (\"SELECT * FROM dbo.extractionScope WHERE CDSViewName = \\'\" + $p_name + \"\\' AND systemName = \\'\" + $p_systemName + \"\\'\"),",
				"     format: 'query') ~> getTimestamp",
				"source(output(",
				"          FISCALYEARVARIANT as string,",
				"          FISCALYEAR as integer,",
				"          FISCALPERIOD as integer,",
				"          FISCALPERIODSTARTDATE as date,",
				"          FISCALPERIODENDDATE as date,",
				"          ISSPECIALPERIOD as string,",
				"          FISCALYEARSTARTDATE as date,",
				"          FISCALYEARENDDATE as date,",
				"          FISCALYEARPERIOD as integer,",
				"          NEXTFISCALPERIOD as integer,",
				"          NEXTFISCALPERIODFISCALYEAR as integer,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat($p_directory,'/',$p_systemName,'/gold/','I_FISCALPERIODFORVARIANT'))) ~> IFISCALPERIODFORVARIANT",
				"source(output(",
				"          CHARTOFACCOUNTS as string,",
				"          GLACCOUNT as string,",
				"          ISBALANCESHEETACCOUNT as string,",
				"          GLACCOUNTGROUP as string,",
				"          CORPORATEGROUPCHARTOFACCOUNTS as string,",
				"          CORPORATEGROUPACCOUNT as string,",
				"          PROFITLOSSACCOUNTTYPE as string,",
				"          SAMPLEGLACCOUNT as string,",
				"          ACCOUNTISMARKEDFORDELETION as string,",
				"          ACCOUNTISBLOCKEDFORCREATION as string,",
				"          ACCOUNTISBLOCKEDFORPOSTING as string,",
				"          ACCOUNTISBLOCKEDFORPLANNING as string,",
				"          PARTNERCOMPANY as string,",
				"          FUNCTIONALAREA as string,",
				"          CREATIONDATE as date,",
				"          CREATEDBYUSER as string,",
				"          LASTCHANGEDATETIME as decimal(15,0),",
				"          GLACCOUNTTYPE as string,",
				"          GLACCOUNTSUBTYPE as string,",
				"          GLACCOUNTEXTERNAL as string,",
				"          BANKRECONCILIATIONACCOUNT as string,",
				"          ISPROFITLOSSACCOUNT as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat($p_directory,'/',$p_systemName,'/gold/','I_GLACCOUNTINCHARTOFACCOUNTS'))) ~> IGLACCOUNTINCHARTOFACCOUNTS",
				"source(output(",
				"          COMPANYCODE as string,",
				"          COMPANYCODENAME as string,",
				"          CITYNAME as string,",
				"          COUNTRY as string,",
				"          CURRENCY as string,",
				"          LANGUAGE as string,",
				"          CHARTOFACCOUNTS as string,",
				"          FISCALYEARVARIANT as string,",
				"          COMPANY as string,",
				"          CREDITCONTROLAREA as string,",
				"          COUNTRYCHARTOFACCOUNTS as string,",
				"          FINANCIALMANAGEMENTAREA as string,",
				"          ADDRESSID as string,",
				"          TAXABLEENTITY as string,",
				"          VATREGISTRATION as string,",
				"          EXTENDEDWHLDGTAXISACTIVE as string,",
				"          CONTROLLINGAREA as string,",
				"          FIELDSTATUSVARIANT as string,",
				"          NONTAXABLETRANSACTIONTAXCODE as string,",
				"          DOCDATEISUSEDFORTAXDETN as string,",
				"          TAXRPTGDATEISACTIVE as string,",
				"          CASHDISCOUNTBASEAMTISNETAMT as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat($p_directory,'/',$p_systemName,'/gold/','I_COMPANYCODE'))) ~> ICOMPANYCODE",
				"source(output(",
				"          SEGMENT as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat($p_directory,'/',$p_systemName,'/gold/','I_SEGMENT'))) ~> ISEGMENT",
				"source(output(",
				"          FUNCTIONALAREA as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat($p_directory,'/',$p_systemName,'/gold/','I_FUNCTIONALAREA'))) ~> IFUNCTIONALAREA",
				"source(output(",
				"          ACCOUNTINGDOCUMENTTYPE as string,",
				"          ACCOUNTINGDOCUMENTNUMBERRANGE as string,",
				"          AUTHORIZATIONGROUP as string,",
				"          EXCHANGERATETYPE as string,",
				"          ALLOWEDFINANCIALACCOUNTTYPES as string,",
				"          CUSTOMERPOSTINGISALLOWED as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat($p_directory,'/',$p_systemName,'/gold/','I_ACCOUNTINGDOCUMENTTYPE'))) ~> IACCOUNTINGDOCUMENTTYPE",
				"source(output(",
				"          COMPANY as string,",
				"          COMPANYNAME as string,",
				"          COMPANYCURRENCY as string,",
				"          COMPANYLANGUAGE as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat($p_directory,'/',$p_systemName,'/gold/','I_GLOBALCOMPANY'))) ~> IGLOBALCOMPANY",
				"source(output(",
				"          COMPANYCODE as string,",
				"          FISCALYEAR as integer,",
				"          FISCALYEARSTARTDATE as date,",
				"          FISCALYEARENDDATE as date,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat($p_directory,'/',$p_systemName,'/gold/','I_FISCALYEARFORCOMPANYCODE'))) ~> IFISCALYEARFORCOMPANYCODE",
				"source(output(",
				"          FISCALYEARVARIANT as string,",
				"          FISCALPERIODISEQUALMONTH as string,",
				"          ISYEARDEPENDENT as string,",
				"          POSTINGPERIODSNUMBERVAL as integer,",
				"          NUMBEROFSPECIALPERIODS as integer,",
				"          FSCLWEEKSTARTISFSCLYEARSTART as string,",
				"          FISCALCALENDARISWEEKBASED as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat($p_directory,'/',$p_systemName,'/gold/','I_FISCALYEARVARIANT'))) ~> IFISCALYEARVARIANT",
				"source(output(",
				"          WBSELEMENTINTERNALID as integer,",
				"          WBSELEMENTEXTERNALID as string,",
				"          WBSELEMENT as string,",
				"          WBSELEMENTSHORTID as string,",
				"          WBSDESCRIPTION as string,",
				"          RESPONSIBLEPERSON as integer,",
				"          RESPONSIBLEPERSONNAME as string,",
				"          APPLICANTCODE as integer,",
				"          APPLICANTNAME as string,",
				"          COMPANYCODE as string,",
				"          BUSINESSAREA as string,",
				"          CONTROLLINGAREA as string,",
				"          FUNCTIONALAREA as string,",
				"          PROFITCENTER as string,",
				"          RESPONSIBLECOSTCENTER as string,",
				"          PLANT as string,",
				"          FREEDEFINEDTABLEFIELDSEMANTIC as string,",
				"          FACTORYCALENDAR as string,",
				"          PRIORITYCODE as string,",
				"          CURRENCY as string,",
				"          COSTINGSHEET as string,",
				"          COSTCENTER as string,",
				"          REQUESTINGCOSTCENTER as string,",
				"          PROJECTINTERNALID as integer,",
				"          WBSELEMENTISBILLINGELEMENT as string,",
				"          WBSELEMENTOBJECT as string,",
				"          INVESTMENTPROFILE as string,",
				"          WBSISSTATISTICALWBSELEMENT as string,",
				"          WBSISACCOUNTASSIGNMENTELEMENT as string,",
				"          PROJECTTYPE as string,",
				"          WBSELEMENTISPLANNINGELEMENT as string,",
				"          WORKCENTERLOCATION as string,",
				"          RESULTANALYSISINTERNALID as string,",
				"          TAXJURISDICTION as string,",
				"          FUNCTIONALLOCATION as string,",
				"          CREATEDBYUSER as string,",
				"          CREATIONDATE as date,",
				"          LASTCHANGEDBYUSER as string,",
				"          LASTCHANGEDATE as date,",
				"          RESPCOSTCENTERCONTROLLINGAREA as string,",
				"          WBSISMARKEDFORINTEGRATEDPLNG as string,",
				"          EQUIPMENT as string,",
				"          PROJECTOBJECTCHANGENUMBER as string,",
				"          WBSELEMENTHIERARCHYLEVEL as integer,",
				"          OVERHEADCODE as string,",
				"          REFERENCEELEMENT as string,",
				"          PROJINTERESTCALCPROFILE as string,",
				"          PROGRESSANLYSAGGREGATIONWEIGHT as decimal(8,0),",
				"          REQGCOSTCENTERCONTROLLINGAREA as string,",
				"          LANGUAGE as string,",
				"          ISMARKEDFORDELETION as string,",
				"          WBSELEMENTISGROUPINGWBSELEMENT as string,",
				"          WBSELEMENTISUSEDINPROJSMMRY as string,",
				"          COSTINGVARIANT as string,",
				"          BASICSTARTDATE as date,",
				"          FORECASTEDSTARTDATE as date,",
				"          ACTUALSTARTDATE as date,",
				"          BASICENDDATE as date,",
				"          FORECASTEDENDDATE as date,",
				"          ACTUALENDDATE as date,",
				"          TECHNICALCOMPLETIONDATE as date,",
				"          BASICDURATION as decimal(18,1),",
				"          BASICDURATIONUNIT as string,",
				"          FORECASTEDDURATION as decimal(18,1),",
				"          FORECASTEDDURATIONUNIT as string,",
				"          ACTUALDURATION as decimal(18,1),",
				"          ACTUALDURATIONUNIT as string,",
				"          SCHEDLDBASICEARLIESTSTARTDATE as date,",
				"          SCHEDULEDBASICLATESTENDDATE as date,",
				"          SCHEDLDFCSTDEARLIESTSTARTDATE as date,",
				"          LATESTSCHEDLDFCSTDENDDATE as date,",
				"          TENTATIVEACTUALSTARTDATE as date,",
				"          TENTATIVEACTUALENDDATE as date,",
				"          JOINTVENTURE as string,",
				"          JOINTVENTURECOSTRECOVERYCODE as string,",
				"          JOINTVENTUREEQUITYTYPE as string,",
				"          JNTVNTRPROJECTTYPE as string,",
				"          JNTINTRSTBILLGCLASS as string,",
				"          JNTINTRSTBILLGSUBCLASS as string,",
				"          SUBPROJECT as string,",
				"          INVESTMENTREASON as string,",
				"          INVESTMENTSCALE as string,",
				"          ENVIRONMENTALINVESTMENTREASON as string,",
				"          REQUESTINGCOMPANYCODE as string,",
				"          NETWORKASSIGNMENTTYPE as integer,",
				"          COSTOBJECT as string,",
				"          BILLINGPLAN as string,",
				"          CONTROLLINGOBJECTCLASS as string,",
				"          FREEDEFINEDATTRIBUTE01 as string,",
				"          FREEDEFINEDATTRIBUTE02 as string,",
				"          FREEDEFINEDATTRIBUTE03 as string,",
				"          FREEDEFINEDATTRIBUTE04 as string,",
				"          FREEDEFINEDQUANTITY1 as decimal(20,3),",
				"          FREEDEFINEDQUANTITY1UNIT as string,",
				"          FREEDEFINEDQUANTITY2 as decimal(20,3),",
				"          FREEDEFINEDQUANTITY2UNIT as string,",
				"          FREEDEFINEDAMOUNT1 as decimal(19,2),",
				"          FREEDEFINEDAMOUNT1CURRENCY as string,",
				"          FREEDEFINEDAMOUNT2 as decimal(19,2),",
				"          FREEDEFINEDAMOUNT2CURRENCY as string,",
				"          FREEDEFINEDDATE1 as date,",
				"          FREEDEFINEDDATE2 as date,",
				"          FREEDEFINEDINDICATOR1 as string,",
				"          FREEDEFINEDINDICATOR2 as string,",
				"          STATUSPROFILE as string,",
				"          DISTRIBUTIONPROFILE as string,",
				"          SCHEDLDBASICEARLIESTENDDATE as date,",
				"          SCHEDLDBASICLATESTSTARTDATE as date,",
				"          SCHEDLDFCSTDEARLIESTENDDATE as date,",
				"          LATESTSCHEDLDFCSTDSTARTDATE as date,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat($p_directory,'/',$p_systemName,'/gold/','I_WBSELEMENTDATA_2'))) ~> IWBSELEMENTDATA2",
				"source(output(",
				"          MANDT as string,",
				"          WBSELEMENTINTERNALID as integer,",
				"          WBSELEMENTEXTERNALID as string,",
				"          WBSELEMENT as string,",
				"          WBSELEMENTSHORTID as string,",
				"          WBSDESCRIPTION as string,",
				"          COMPANYCODE as string,",
				"          CONTROLLINGAREA as string,",
				"          FUNCTIONALAREA as string,",
				"          PROFITCENTER as string,",
				"          RESPONSIBLECOSTCENTER as string,",
				"          PLANT as string,",
				"          FACTORYCALENDAR as string,",
				"          COSTINGSHEET as string,",
				"          COSTCENTER as string,",
				"          PROJECTINTERNALID as integer,",
				"          WBSELEMENTISBILLINGELEMENT as string,",
				"          WBSELEMENTOBJECT as string,",
				"          INVESTMENTPROFILE as string,",
				"          WBSISSTATISTICALWBSELEMENT as string,",
				"          WBSISACCOUNTASSIGNMENTELEMENT as string,",
				"          PROJECTTYPE as string,",
				"          JOINTVENTURE as string,",
				"          JOINTVENTURECOSTRECOVERYCODE as string,",
				"          JOINTVENTUREEQUITYTYPE as string,",
				"          JNTVNTRPROJECTTYPE as string,",
				"          JNTINTRSTBILLGCLASS as string,",
				"          JNTINTRSTBILLGSUBCLASS as string,",
				"          LOCATION as string,",
				"          RESULTANALYSISINTERNALID as string,",
				"          FUND as string,",
				"          GRANTID as string,",
				"          FUNDISFIXASSIGNED as string,",
				"          FUNCTIONALAREAISFIXASSIGNED as string,",
				"          GRANTISFIXASSIGNED as string,",
				"          SPONSOREDPROGRAM as string,",
				"          TAXJURISDICTION as string,",
				"          FUNCTIONALLOCATION as string,",
				"          CREATEDBYUSER as string,",
				"          CREATIONDATE as date,",
				"          LASTCHANGEDBYUSER as string,",
				"          LASTCHANGEDATE as date,",
				"          RESPCOSTCENTERCONTROLLINGAREA as string,",
				"          LEADINGSALESORDERITEM as integer,",
				"          LEADINGSALESORDER as string,",
				"          ENTPROJECTSETTLEMENTELEMENT as string,",
				"          ENTPROJISSETTLMTRULEINHERITED as string,",
				"          RESULTANALYSISDESCRIPTION as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat($p_directory,'/',$p_systemName,'/gold/','I_WBSELEMENTBASICDATA'))) ~> IWBSELEMENTBASICDATA",
				"source(output(",
				"          MANDT as string,",
				"          COMPANYCODE as string,",
				"          MASTERFIXEDASSET as string,",
				"          MASTERFIXEDASSETDESCRIPTION as string,",
				"          ASSETAUTHORIZATIONCONTEXT as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat($p_directory,'/',$p_systemName,'/gold/','I_MASTERFIXEDASSET'))) ~> IMASTERFIXEDASSET",
				"source(output(",
				"          MANDT as string,",
				"          ASSETTRANSACTIONTYPE as string,",
				"          ASSETTRANSACTIONTYPEGROUP as string,",
				"          ASTTRANSTYPEISFRBDNINMNLPOSTG as string,",
				"          DEFAULTDEBITCREDITCODE as string,",
				"          ASTRETIREMENTREVENUEISREQUIRED as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat($p_directory,'/',$p_systemName,'/gold/','I_ASSETTRANSACTIONTYPE'))) ~> IASSETTRANSACTIONTYPE",
				"source(output(",
				"          LEDGER as string,",
				"          ISLEADINGLEDGER as string,",
				"          LEDGERAPPLICATION as string,",
				"          LEDGERSUBAPPLICATION as string,",
				"          ACCOUNTINGVALUATIONVIEW as string,",
				"          LEDGERTYPE as string,",
				"          EXTENSIONLEDGERTYPE as string,",
				"          REFERENCELEDGER as string,",
				"          TECHNICALLEDGER as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat($p_directory,'/',$p_systemName,'/gold/','I_LEDGER'))) ~> ILEDGER",
				"source(output(",
				"          COMPANYCODE as string,",
				"          MASTERFIXEDASSET as string,",
				"          FIXEDASSET as string,",
				"          FIXEDASSETEXTERNALID as string,",
				"          ASSETCLASS as string,",
				"          ASSETSERIALNUMBER as string,",
				"          QUANTITY as decimal(20,3),",
				"          BASEUNIT as string,",
				"          INVENTORY as string,",
				"          FIXEDASSETDESCRIPTION as string,",
				"          ASSETADDITIONALDESCRIPTION as string,",
				"          CURRENCY as string,",
				"          ORIGLACQNAMTINCOCODECRCY as decimal(25,2),",
				"          PARTNERCOMPANY as string,",
				"          ASSETMANUFACTURERNAME as string,",
				"          INHOUSEPRODNPERCENT as decimal(19,2),",
				"          ASSETSUPPLIERNAME as string,",
				"          INVENTORYNOTE as string,",
				"          GROUP1ASSETEVALUATIONKEY as string,",
				"          GROUP2ASSETEVALUATIONKEY as string,",
				"          GROUP3ASSETEVALUATIONKEY as string,",
				"          GROUP4ASSETEVALUATIONKEY as string,",
				"          GROUP5ASSETEVALUATIONKEY as string,",
				"          ASSETACCOUNTDETERMINATION as string,",
				"          HASHISTORY as integer,",
				"          ASSETCAPITALIZATIONDATE as date,",
				"          FIRSTACQUISITIONFISCALYEAR as integer,",
				"          FIRSTACQUISITIONFISCALPERIOD as integer,",
				"          ASSETDEACTIVATIONDATE as date,",
				"          PLANNEDRETIREMENTDATE as date,",
				"          FIXEDASSETORDERDATE as date,",
				"          ORIGINALMASTERFIXEDASSET as string,",
				"          FIXEDASSETGROUP as string,",
				"          INVESTMENTREASON as string,",
				"          ASSETISREALESTATE as integer,",
				"          AREASIZEUNIT as string,",
				"          INVESTMENTORDER as string,",
				"          INVESTMENTPROJECTWBSELEMENT as integer,",
				"          INVENTORYISCOUNTED as string,",
				"          LASTINVENTORYDATE as date,",
				"          ASSETSYNCHRONIZATIONRULE as string,",
				"          ORIGINALACQUISITIONFISCALYEAR as integer,",
				"          ASSETTYPENAME as string,",
				"          SUPPLIER as string,",
				"          ASSETCOUNTRYOFORIGIN as string,",
				"          NOTICEOFASSESSMENTTAXID as string,",
				"          LASTASSESSMENTNOTICEDATE as date,",
				"          ENVRNMTLINVESTMENTREASON as string,",
				"          LASTCHANGEDATE as date,",
				"          FIXEDASSETFINDATACMPLTNS as integer,",
				"          ACCOUNTISMARKEDFORDELETION as string,",
				"          ACCOUNTISBLOCKEDFORPOSTING as string,",
				"          ACQUISITIONVALUEDATE as date,",
				"          ORIGINALFIXEDASSETVALUEDATE as date,",
				"          ASSETUNDERCONSTISINVMTMSR as string,",
				"          LASTRETIREMENTVALUEDATE as date,",
				"          LASTCHANGEDBYUSER as string,",
				"          FIXEDASSETPROPERTYTYPE as string,",
				"          CREATIONDATE as date,",
				"          CREATEDBYUSER as string,",
				"          MANUALDEPRECIATIONREASON as string,",
				"          LASTREORGANIZATIONDATE as date,",
				"          LEGACYDATATRANSFERDATE as date,",
				"          ISGROUPASSET as string,",
				"          ISLINEITEMSETTLED as string,",
				"          ORIGINALFIXEDASSET as string,",
				"          MASTERFIXEDASSETSEARCHTERM as string,",
				"          ASSETSTATUSATPURCHASE as string,",
				"          ASSETISACQUIREDUSED as string,",
				"          ISMAINASSET as string,",
				"          ASSETLIFECYCLESTATUS as string,",
				"          ASSETCOMPLETENESSSTATUS as string,",
				"          ASSETUNDERCONSTRUCTIONSTATUS as string,",
				"          ASSETCREATIONVALIDITYDATE as date,",
				"          CREATIONDATETIME as decimal(15,0),",
				"          LASTCHANGEDATETIME as decimal(15,0),",
				"          ASSETSCREENLAYOUT as string,",
				"          ORIGINALACQUISITIONAMOUNT as decimal(25,2),",
				"          ORIGINALACQUISITIONCURRENCY as string,",
				"          PROPERTYCLASS as string,",
				"          LOCALTAXOFFICE as string,",
				"          MUNICIPALITY as string,",
				"          LANDREGISTERDATE as date,",
				"          LANDREGISTERENTRYSEQUENCE as string,",
				"          LANDREGISTERENTRYDATE as date,",
				"          LANDREGISTERVOLUME as string,",
				"          LANDREGISTERPAGE as string,",
				"          LANDREGISTERMAP as string,",
				"          LANDPLOT as string,",
				"          CONVEYANCEDATE as date,",
				"          AREASIZE as decimal(20,3),",
				"          LEASESUPPLIER as string,",
				"          LEASEAGREEMENT as string,",
				"          LEASEAGREEMENTDATE as date,",
				"          LEASETERMENDDATE as date,",
				"          LEASETERMSTARTDATE as date,",
				"          LEASEDURATIONINFISCALYEARS as integer,",
				"          LEASEDURATIONINFISCALPERIODS as integer,",
				"          LEASETYPE as string,",
				"          LEASEDASSETNOTE as string,",
				"          LEGACYASSET as string,",
				"          LEGACYFIXEDASSETCOMPANYCODE as string,",
				"          LEGACYMASTERFIXEDASSET as string,",
				"          LEGACYFIXEDASSET as string,",
				"          LEGACYDATATRANSFERSEQUENCE as integer,",
				"          ASSETISFORPOSTCAPITALIZATION as string,",
				"          ASSETAUTHORIZATIONCONTEXT as string,",
				"          OBJECTINTERNALID as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat($p_directory,'/',$p_systemName,'/gold/','I_FIXEDASSET'))) ~> IFIXEDASSET",
				"source(output(",
				"          MANDT as string,",
				"          ASSETCLASS as string,",
				"          ASSETACCOUNTDETERMINATION as string,",
				"          BUSINESSAREA as string,",
				"          PLANT as string,",
				"          COSTCENTER as string,",
				"          FIXEDASSETFINDATACMPLTNS as integer,",
				"          ASSETCOUNTRYOFORIGIN as string,",
				"          SUPPLIER as string,",
				"          FIXEDASSETGROUP as string,",
				"          FIXEDASSETPROPERTYTYPE as string,",
				"          PROPERTYCLASS as string,",
				"          INVESTMENTSUPPORTMEASURE as string,",
				"          GROUP1ASSETEVALUATIONKEY as string,",
				"          GROUP2ASSETEVALUATIONKEY as string,",
				"          GROUP3ASSETEVALUATIONKEY as string,",
				"          GROUP4ASSETEVALUATIONKEY as string,",
				"          INVESTMENTREASON as string,",
				"          ASSETAUTHORIZATIONCONTEXT as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat($p_directory,'/',$p_systemName,'/gold/','I_ASSETCLASS'))) ~> IASSETCLASS",
				"source(output(",
				"          MANDT as string,",
				"          WBSELEMENT as string,",
				"          WBSELEMENTWITHCODINGMASK as string,",
				"          WBSELEMENTINTERNALID as integer,",
				"          PROJECTINTERNALID as integer,",
				"          PROJECT as string,",
				"          WBSDESCRIPTION as string,",
				"          WBSELEMENTOBJECT as string,",
				"          CREATEDBYUSER as string,",
				"          CREATIONDATE as date,",
				"          LASTCHANGEDBYUSER as string,",
				"          LASTCHANGEDATE as date,",
				"          RESPONSIBLEPERSON as integer,",
				"          RESPONSIBLEPERSONNAME as string,",
				"          APPLICANTCODE as integer,",
				"          APPLICANTNAME as string,",
				"          COMPANYCODE as string,",
				"          BUSINESSAREA as string,",
				"          CONTROLLINGAREA as string,",
				"          PROFITCENTER as string,",
				"          PROJECTTYPE as string,",
				"          WBSELEMENTISPLANNINGELEMENT as string,",
				"          WBSISACCOUNTASSIGNMENTELEMENT as string,",
				"          WBSELEMENTISBILLINGELEMENT as string,",
				"          COSTINGSHEET as string,",
				"          REQUESTINGCOSTCENTER as string,",
				"          RESPONSIBLECOSTCENTER as string,",
				"          FACTORYCALENDAR as string,",
				"          PRIORITYCODE as string,",
				"          CURRENCY as string,",
				"          PLANT as string,",
				"          FREEDEFINEDTABLEFIELDSEMANTIC as string,",
				"          WBSISSTATISTICALWBSELEMENT as string,",
				"          TAXJURISDICTION as string,",
				"          WBSISMARKEDFORINTEGRATEDPLNG as string,",
				"          FUNCTIONALAREA as string,",
				"          LOCATION as string,",
				"          EQUIPMENT as string,",
				"          FUNCTIONALLOCATION as string,",
				"          PROJECTOBJECTCHANGENUMBER as string,",
				"          PROJECTOBJECTREFERENCEELEMENT as string,",
				"          PROJINTERESTCALCPROFILE as string,",
				"          INVESTMENTPROFILE as string,",
				"          BASICSTARTDATE as date,",
				"          FORECASTEDSTARTDATE as date,",
				"          ACTUALSTARTDATE as date,",
				"          BASICENDDATE as date,",
				"          FORECASTEDENDDATE as date,",
				"          ACTUALENDDATE as date,",
				"          ACTUALDURATIONUNIT as string,",
				"          FORECASTEDDURATIONUNIT as string,",
				"          BASICDURATIONUNIT as string,",
				"          BASICDURATION as decimal(38,18),",
				"          FORECASTEDDURATION as decimal(38,18),",
				"          ACTUALDURATION as decimal(38,18),",
				"          SCHEDLDBASICEARLIESTSTARTDATE as date,",
				"          SCHEDULEDBASICLATESTENDDATE as date,",
				"          SCHEDLDFCSTDEARLIESTSTARTDATE as date,",
				"          LATESTSCHEDLDFCSTDENDDATE as date,",
				"          TENTATIVEACTUALSTARTDATE as date,",
				"          TENTATIVEACTUALENDDATE as date,",
				"          SCHEDLDBASICLATESTSTARTDATE as date,",
				"          SCHEDLDBASICEARLIESTENDDATE as date,",
				"          LATESTSCHEDLDFCSTDSTARTDATE as date,",
				"          SCHEDLDFCSTDEARLIESTENDDATE as date,",
				"          WBSELEMENTHIERARCHYLEVEL as string,",
				"          OVERHEADCODE as string,",
				"          RESULTANALYSISINTERNALID as string,",
				"          PROGRESSANLYSAGGREGATIONWEIGHT as decimal(38,18),",
				"          WBSELEMENTSHORTID as string,",
				"          REQGCOSTCENTERCONTROLLINGAREA as string,",
				"          RESPCOSTCENTERCONTROLLINGAREA as string,",
				"          LANGUAGE as string,",
				"          COSTCENTER as string,",
				"          COSTOBJECT as string,",
				"          WBSELEMENTISUSEDINPROJSMMRY as string,",
				"          ISMARKEDFORDELETION as string,",
				"          INVENTORYSPECIALSTOCKVALNTYPE as string,",
				"          BILLINGPLAN as string,",
				"          WBSELEMENTISGROUPINGWBSELEMENT as string,",
				"          COSTINGVARIANT as string,",
				"          JOINTVENTURE as string,",
				"          JOINTVENTURERECOVERYCODE as string,",
				"          JOINTVENTUREEQUITYTYPE as string,",
				"          JOINTVENTUREOBJECTTYPE as string,",
				"          JOINTVENTURECLASS as string,",
				"          JOINTVENTURESUBCLASS as string,",
				"          WBSELEMENTHASACTIVITIES as string,",
				"          WBSHASFCSTDDATEFROMACTIVITY as string,",
				"          WBSHASFCSTDDATESETMANUALLY as string,",
				"          WBSHASBASICDATEMANUALLYSET as string,",
				"          WBSHASACTUALDATESETMANUALLY as string,",
				"          WBSELMNTHASACTUALDATEFROMACTY as string,",
				"          CONTROLLINGOBJECTCLASS as string,",
				"          FREEDEFINEDATTRIBUTE01 as string,",
				"          FREEDEFINEDATTRIBUTE02 as string,",
				"          FREEDEFINEDATTRIBUTE03 as string,",
				"          FREEDEFINEDATTRIBUTE04 as string,",
				"          FREEDEFINEDQUANTITY1 as decimal(38,18),",
				"          FREEDEFINEDQUANTITY1UNIT as string,",
				"          FREEDEFINEDQUANTITY2 as decimal(38,18),",
				"          FREEDEFINEDQUANTITY2UNIT as string,",
				"          FREEDEFINEDAMOUNT1 as decimal(38,18),",
				"          FREEDEFINEDAMOUNT1CURRENCY as string,",
				"          FREEDEFINEDAMOUNT2 as decimal(38,18),",
				"          FREEDEFINEDAMOUNT2CURRENCY as string,",
				"          FREEDEFINEDDATE1 as date,",
				"          FREEDEFINEDDATE2 as date,",
				"          FREEDEFINEDINDICATOR1 as string,",
				"          FREEDEFINEDINDICATOR2 as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat($p_directory,'/',$p_systemName,'/gold/','I_WBSELEMENT'))) ~> IWBSELEMENT",
				"source(output(",
				"          MANDT as string,",
				"          EQUIPMENT as string,",
				"          EQUIPMENTCATEGORY as string,",
				"          TECHNICALOBJECTTYPE as string,",
				"          PLANT as string,",
				"          DIVISION as string,",
				"          STORAGELOCATION as string,",
				"          CREATEDBYUSER as string,",
				"          LASTCHANGEDBYUSER as string,",
				"          CREATIONDATE as date,",
				"          LASTCHANGEDATE as date,",
				"          ASSETMANUFACTURERNAME as string,",
				"          MANUFACTURERPARTTYPENAME as string,",
				"          MANUFACTURERCOUNTRY as string,",
				"          CONSTRUCTIONYEAR as string,",
				"          CONSTRUCTIONMONTH as string,",
				"          ACQUISITIONDATE as date,",
				"          CURRENCY as string,",
				"          ACQUISITIONVALUE as decimal(38,18),",
				"          MAINTOBJECTINTERNALID as string,",
				"          SERIALNUMBER as string,",
				"          EQUIPUSAGEPERIODSEQUENCENUMBER as integer,",
				"          MATERIAL as string,",
				"          CUSTOMER as string,",
				"          AUTHORIZATIONGROUP as string,",
				"          MANUFACTURERSERIALNUMBER as string,",
				"          UNIQUEITEMIDENTIFIER as string,",
				"          UNIQUEITEMIDENTIFIERSTRUCTYPE as string,",
				"          UNIQUEITEMIDENTIFIERRESPPLANT as string,",
				"          ASSETSYNCHRONIZATIONRULE as string,",
				"          INVENTORYNUMBER as string,",
				"          GROSSWEIGHT as decimal(38,18),",
				"          GROSSWEIGHTUNIT as string,",
				"          SIZEORDIMENSIONTEXT as string,",
				"          BATCH as string,",
				"          OPERATIONSTARTDATE as date,",
				"          SUPPLIER as string,",
				"          HASEQUIPMENTDATA as string,",
				"          EQUIPMENTHASSTOCKINFORMATION as string,",
				"          MASTERWARRANTY as string,",
				"          LASTCHANGEDATETIME as decimal(38,18),",
				"          EQUIPMENTFIRSTDELIVERYDATE as date,",
				"          VALIDITYSTARTDATE as date,",
				"          VALIDITYENDDATE as date,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat($p_directory,'/',$p_systemName,'/gold/','I_EQUIPMENT'))) ~> IEQUIPMENT",
				"source(output(",
				"          CHARTOFACCOUNTS as string,",
				"          CORPORATEGROUPCHARTOFACCOUNTS as string,",
				"          CHARTOFACCTSISBLOCKED as string,",
				"          MAINTENANCELANGUAGE as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat($p_directory,'/',$p_systemName,'/gold/','I_CHARTOFACCOUNTS'))) ~> ICHARTOFACCOUNTS",
				"source(output(",
				"          BUSINESSAREA as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat($p_directory,'/',$p_systemName,'/gold/','I_BUSINESSAREA'))) ~> IBUSINESSAREA",
				"source(output(",
				"          PLANT as string,",
				"          PLANTNAME as string,",
				"          VALUATIONAREA as string,",
				"          PLANTCUSTOMER as string,",
				"          PLANTSUPPLIER as string,",
				"          FACTORYCALENDAR as string,",
				"          DEFAULTPURCHASINGORGANIZATION as string,",
				"          SALESORGANIZATION as string,",
				"          ADDRESSID as string,",
				"          PLANTCATEGORY as string,",
				"          DISTRIBUTIONCHANNEL as string,",
				"          DIVISION as string,",
				"          LANGUAGE as string,",
				"          ISMARKEDFORARCHIVING as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat($p_directory,'/',$p_systemName,'/gold/','I_PLANT'))) ~> IPLANT",
				"source(output(",
				"          PRODUCT as string,",
				"          PRODUCTEXTERNALID as string,",
				"          PRODUCTOID as string,",
				"          PRODUCTTYPE as string,",
				"          CREATIONDATE as date,",
				"          CREATIONTIME as string,",
				"          CREATIONDATETIME as decimal(28,7),",
				"          CREATEDBYUSER as string,",
				"          LASTCHANGEDATE as date,",
				"          LASTCHANGEDBYUSER as string,",
				"          ISMARKEDFORDELETION as string,",
				"          CROSSPLANTSTATUS as string,",
				"          CROSSPLANTSTATUSVALIDITYDATE as date,",
				"          PRODUCTOLDID as string,",
				"          GROSSWEIGHT as decimal(20,3),",
				"          PURCHASEORDERQUANTITYUNIT as string,",
				"          SOURCEOFSUPPLY as string,",
				"          WEIGHTUNIT as string,",
				"          COUNTRYOFORIGIN as string,",
				"          COMPETITORID as string,",
				"          PRODUCTGROUP as string,",
				"          BASEUNIT as string,",
				"          ITEMCATEGORYGROUP as string,",
				"          NETWEIGHT as decimal(20,3),",
				"          PRODUCTHIERARCHY as string,",
				"          DIVISION as string,",
				"          VARBLPURORDUNITISACTIVE as string,",
				"          VOLUMEUNIT as string,",
				"          MATERIALVOLUME as decimal(20,3),",
				"          SALESSTATUS as string,",
				"          TRANSPORTATIONGROUP as string,",
				"          SALESSTATUSVALIDITYDATE as date,",
				"          AUTHORIZATIONGROUP as string,",
				"          ANPCODE as integer,",
				"          PRODUCTCATEGORY as string,",
				"          BRAND as string,",
				"          PROCUREMENTRULE as string,",
				"          VALIDITYSTARTDATE as date,",
				"          LOWLEVELCODE as string,",
				"          PRODNOINGENPRODINPREPACKPROD as string,",
				"          SERIALIDENTIFIERASSGMTPROFILE as string,",
				"          SIZEORDIMENSIONTEXT as string,",
				"          INDUSTRYSTANDARDNAME as string,",
				"          PRODUCTSTANDARDID as string,",
				"          INTERNATIONALARTICLENUMBERCAT as string,",
				"          PRODUCTISCONFIGURABLE as string,",
				"          ISBATCHMANAGEMENTREQUIRED as string,",
				"          HASEMPTIESBOM as string,",
				"          EXTERNALPRODUCTGROUP as string,",
				"          CROSSPLANTCONFIGURABLEPRODUCT as string,",
				"          SERIALNOEXPLICITNESSLEVEL as string,",
				"          PRODUCTMANUFACTURERNUMBER as string,",
				"          MANUFACTURERNUMBER as string,",
				"          MANUFACTURERPARTPROFILE as string,",
				"          QLTYMGMTINPROCMTISACTIVE as string,",
				"          ISAPPROVEDBATCHRECORDREQD as string,",
				"          HANDLINGINDICATOR as string,",
				"          WAREHOUSEPRODUCTGROUP as string,",
				"          WAREHOUSESTORAGECONDITION as string,",
				"          STANDARDHANDLINGUNITTYPE as string,",
				"          SERIALNUMBERPROFILE as string,",
				"          ADJUSTMENTPROFILE as string,",
				"          PREFERREDUNITOFMEASURE as string,",
				"          ISPILFERABLE as string,",
				"          ISRELEVANTFORHZDSSUBSTANCES as string,",
				"          QUARANTINEPERIOD as decimal(17,0),",
				"          TIMEUNITFORQUARANTINEPERIOD as string,",
				"          QUALITYINSPECTIONGROUP as string,",
				"          HANDLINGUNITTYPE as string,",
				"          HASVARIABLETAREWEIGHT as string,",
				"          MAXIMUMPACKAGINGLENGTH as decimal(20,3),",
				"          MAXIMUMPACKAGINGWIDTH as decimal(20,3),",
				"          MAXIMUMPACKAGINGHEIGHT as decimal(20,3),",
				"          MAXIMUMCAPACITY as decimal(20,3),",
				"          OVERCAPACITYTOLERANCE as decimal(18,1),",
				"          UNITFORMAXPACKAGINGDIMENSIONS as string,",
				"          BASEUNITSPECIFICPRODUCTLENGTH as decimal(20,3),",
				"          BASEUNITSPECIFICPRODUCTWIDTH as decimal(20,3),",
				"          BASEUNITSPECIFICPRODUCTHEIGHT as decimal(20,3),",
				"          PRODUCTMEASUREMENTUNIT as string,",
				"          PRODUCTVALIDSTARTDATE as date,",
				"          ARTICLECATEGORY as string,",
				"          CONTENTUNIT as string,",
				"          NETCONTENT as decimal(20,3),",
				"          COMPARISONPRICEQUANTITY as decimal(5,0),",
				"          GROSSCONTENT as decimal(20,3),",
				"          PRODUCTVALIDENDDATE as date,",
				"          ASSORTMENTLISTTYPE as string,",
				"          HASTEXTILEPARTSWTHANIMALORIGIN as string,",
				"          PRODUCTSEASONUSAGECATEGORY as string,",
				"          INDUSTRYSECTOR as string,",
				"          CHANGENUMBER as string,",
				"          MATERIALREVISIONLEVEL as string,",
				"          ISACTIVEENTITY as string,",
				"          LASTCHANGEDATETIME as decimal(28,7),",
				"          LASTCHANGETIME as string,",
				"          DANGEROUSGOODSINDPROFILE as string,",
				"          PRODUCTUUID as binary,",
				"          PRODSUPCHNMGMTUUID22 as string,",
				"          PRODUCTDOCUMENTCHANGENUMBER as string,",
				"          PRODUCTDOCUMENTPAGECOUNT as integer,",
				"          PRODUCTDOCUMENTPAGENUMBER as string,",
				"          OWNINVENTORYMANAGEDPRODUCT as string,",
				"          DOCUMENTISCREATEDBYCAD as string,",
				"          PRODUCTIONORINSPECTIONMEMOTXT as string,",
				"          PRODUCTIONMEMOPAGEFORMAT as string,",
				"          GLOBALTRADEITEMNUMBERVARIANT as string,",
				"          PRODUCTISHIGHLYVISCOUS as string,",
				"          TRANSPORTISINBULK as string,",
				"          PRODALLOCDETNPROCEDURE as string,",
				"          PRODEFFCTYPARAMVALSAREASSIGNED as string,",
				"          PRODISENVIRONMENTALLYRELEVANT as string,",
				"          LABORATORYORDESIGNOFFICE as string,",
				"          PACKAGINGMATERIALGROUP as string,",
				"          PRODUCTISLOCKED as string,",
				"          DISCOUNTINKINDELIGIBILITY as string,",
				"          SMARTFORMNAME as string,",
				"          PACKINGREFERENCEPRODUCT as string,",
				"          BASICMATERIAL as string,",
				"          PRODUCTDOCUMENTNUMBER as string,",
				"          PRODUCTDOCUMENTVERSION as string,",
				"          PRODUCTDOCUMENTTYPE as string,",
				"          PRODUCTDOCUMENTPAGEFORMAT as string,",
				"          PRODUCTCONFIGURATION as integer,",
				"          SEGMENTATIONSTRATEGY as string,",
				"          SEGMENTATIONISRELEVANT as string,",
				"          ISCHEMICALCOMPLIANCERELEVANT as string,",
				"          MANUFACTURERBOOKPARTNUMBER as string,",
				"          LOGISTICALPRODUCTCATEGORY as string,",
				"          SALESPRODUCT as string,",
				"          PRODCHARC1INTERNALNUMBER as integer,",
				"          PRODCHARC2INTERNALNUMBER as integer,",
				"          PRODCHARC3INTERNALNUMBER as integer,",
				"          PRODUCTCHARACTERISTIC1 as string,",
				"          PRODUCTCHARACTERISTIC2 as string,",
				"          PRODUCTCHARACTERISTIC3 as string,",
				"          DFSAMMUNITIONGROUPCODE as string,",
				"          DFSRICIDENTIFIER as long,",
				"          DFSPRODUCTSENSITIVITY as string,",
				"          DFSMANUFACTURERPARTLONGNUMBER as string,",
				"          DFSMATLCONDITIONMGMT as string,",
				"          DFSRETURNDELIVERY as string,",
				"          DFSLOGISTICSLEVEL as string,",
				"          DFSNATIONALITEMIDNNUMBER as string,",
				"          ZZ1_CUSTOMFIELDRISKMIT_PRD as string,",
				"          ZZ1_CUSTOMFIELDHIGHRIS_PRD as string,",
				"          ZZ1_CUSTOMFIELDRISKREA_PRD as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat($p_directory,'/',$p_systemName,'/gold/','I_PRODUCT'))) ~> IPRODUCT",
				"source(output(",
				"          SUPPLIER as string,",
				"          SUPPLIERACCOUNTGROUP as string,",
				"          SUPPLIERNAME as string,",
				"          SUPPLIERFULLNAME as string,",
				"          ISBUSINESSPURPOSECOMPLETED as string,",
				"          CREATEDBYUSER as string,",
				"          CREATIONDATE as date,",
				"          ISONETIMEACCOUNT as string,",
				"          AUTHORIZATIONGROUP as string,",
				"          VATREGISTRATION as string,",
				"          ACCOUNTISBLOCKEDFORPOSTING as string,",
				"          TAXJURISDICTION as string,",
				"          SUPPLIERCORPORATEGROUP as string,",
				"          CUSTOMER as string,",
				"          INDUSTRY as string,",
				"          TAXNUMBER1 as string,",
				"          TAXNUMBER2 as string,",
				"          TAXNUMBER3 as string,",
				"          TAXNUMBER4 as string,",
				"          TAXNUMBER5 as string,",
				"          TAXNUMBER6 as string,",
				"          POSTINGISBLOCKED as string,",
				"          PURCHASINGISBLOCKED as string,",
				"          INTERNATIONALLOCATIONNUMBER1 as integer,",
				"          INTERNATIONALLOCATIONNUMBER2 as integer,",
				"          INTERNATIONALLOCATIONNUMBER3 as integer,",
				"          ADDRESSID as string,",
				"          REGION as string,",
				"          ORGANIZATIONBPNAME1 as string,",
				"          ORGANIZATIONBPNAME2 as string,",
				"          CITYNAME as string,",
				"          POSTALCODE as string,",
				"          STREETNAME as string,",
				"          COUNTRY as string,",
				"          CONCATENATEDINTERNATIONALLOCNO as string,",
				"          SUPPLIERPROCUREMENTBLOCK as string,",
				"          SUPLRQUALITYMANAGEMENTSYSTEM as string,",
				"          SUPLRQLTYINPROCMTCERTFNVALIDTO as date,",
				"          SUPPLIERLANGUAGE as string,",
				"          ALTERNATIVEPAYEEACCOUNTNUMBER as string,",
				"          PHONENUMBER1 as string,",
				"          FAXNUMBER as string,",
				"          ISNATURALPERSON as string,",
				"          TAXNUMBERRESPONSIBLE as string,",
				"          UK_CONTRACTORBUSINESSTYPE as string,",
				"          UK_PARTNERTRADINGNAME as string,",
				"          UK_PARTNERTAXREFERENCE as string,",
				"          UK_VERIFICATIONSTATUS as string,",
				"          UK_VERIFICATIONNUMBER as string,",
				"          UK_COMPANYREGISTRATIONNUMBER as string,",
				"          UK_VERIFIEDTAXSTATUS as string,",
				"          FORMOFADDRESS as string,",
				"          REFERENCEACCOUNTGROUP as string,",
				"          VATLIABILITY as string,",
				"          RESPONSIBLETYPE as string,",
				"          TAXNUMBERTYPE as string,",
				"          FISCALADDRESS as string,",
				"          BUSINESSTYPE as string,",
				"          BIRTHDATE as date,",
				"          PAYMENTISBLOCKEDFORSUPPLIER as string,",
				"          SORTFIELD as string,",
				"          PHONENUMBER2 as string,",
				"          DELETIONINDICATOR as string,",
				"          TAXINVOICEREPRESENTATIVENAME as string,",
				"          INDUSTRYTYPE as string,",
				"          IN_GSTSUPPLIERCLASSIFICATION as string,",
				"          SUPLRPROOFOFDELIVRLVTCODE as string,",
				"          TRADINGPARTNER as string,",
				"          BR_TAXISSPLIT as string,",
				"          AU_PAYERISPAYINGTOCARRYONENT as string,",
				"          AU_INDIVIDUALISUNDER18 as string,",
				"          AU_PAYMENTISEXCEEDING75 as string,",
				"          AU_PAYMENTISWHOLLYINPUTTAXED as string,",
				"          AU_PARTNERISSUPPLYWITHOUTGAIN as string,",
				"          AU_SUPPLIERISENTITLEDTOABN as string,",
				"          AU_PAYMENTISINCOMEEXEMPTED as string,",
				"          AU_SUPPLYISMADEASPRIVATEHOBBY as string,",
				"          AU_SUPPLYMADEISOFDMSTCNATURE as string,",
				"          ISTOBEACCEPTEDATORIGIN as string,",
				"          BPISEQUALIZATIONTAXSUBJECT as string,",
				"          BRSPCFCTAXBASEPERCENTAGECODE as integer,",
				"          DATAMEDIUMEXCHANGEINDICATOR as string,",
				"          DATAEXCHANGEINSTRUCTIONKEY as string,",
				"          SUPPLIERISSUBRANGERELEVANT as string,",
				"          TRAINSTATIONNAME as string,",
				"          ALTERNATIVEPAYEEISALLOWED as string,",
				"          PAYTSLIPWTHREFSUBSCRIBER as string,",
				"          TRANSPSERVICEAGENTSTSTCGRP as string,",
				"          SUPPLIERISPLANTRELEVANT as string,",
				"          SUPLRTAXAUTHORITYACCOUNTNUMBER as string,",
				"          SUPPLIERPLANT as string,",
				"          FACTORYCALENDAR as string,",
				"          PAYMENTREASON as string,",
				"          SUPPLIERCENTRALDELETIONISBLOCK as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat($p_directory,'/',$p_systemName,'/gold/','I_SUPPLIER'))) ~> ISUPPLIER",
				"source(output(",
				"          PRODUCTGROUP as string,",
				"          AUTHORIZATIONGROUP as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat($p_directory,'/',$p_systemName,'/gold/','I_PRODUCTGROUP_2'))) ~> IPRODUCTGROUP2",
				"source(output(",
				"          CUSTOMER as string,",
				"          CUSTOMERNAME as string,",
				"          CUSTOMERFULLNAME as string,",
				"          CREATEDBYUSER as string,",
				"          CREATIONDATE as date,",
				"          ADDRESSID as string,",
				"          CUSTOMERCLASSIFICATION as string,",
				"          VATREGISTRATION as string,",
				"          CUSTOMERACCOUNTGROUP as string,",
				"          AUTHORIZATIONGROUP as string,",
				"          DELIVERYISBLOCKED as string,",
				"          POSTINGISBLOCKED as string,",
				"          BILLINGISBLOCKEDFORCUSTOMER as string,",
				"          ORDERISBLOCKEDFORCUSTOMER as string,",
				"          INTERNATIONALLOCATIONNUMBER1 as integer,",
				"          ISONETIMEACCOUNT as string,",
				"          TAXJURISDICTION as string,",
				"          INDUSTRY as string,",
				"          TAXNUMBERTYPE as string,",
				"          TAXNUMBER1 as string,",
				"          TAXNUMBER2 as string,",
				"          TAXNUMBER3 as string,",
				"          TAXNUMBER4 as string,",
				"          TAXNUMBER5 as string,",
				"          TAXNUMBER6 as string,",
				"          CUSTOMERCORPORATEGROUP as string,",
				"          SUPPLIER as string,",
				"          NIELSENREGION as string,",
				"          INDUSTRYCODE1 as string,",
				"          INDUSTRYCODE2 as string,",
				"          INDUSTRYCODE3 as string,",
				"          INDUSTRYCODE4 as string,",
				"          INDUSTRYCODE5 as string,",
				"          COUNTRY as string,",
				"          ORGANIZATIONBPNAME1 as string,",
				"          ORGANIZATIONBPNAME2 as string,",
				"          CITYNAME as string,",
				"          POSTALCODE as string,",
				"          STREETNAME as string,",
				"          SORTFIELD as string,",
				"          FAXNUMBER as string,",
				"          BR_SUFRAMACODE as string,",
				"          REGION as string,",
				"          TELEPHONENUMBER1 as string,",
				"          TELEPHONENUMBER2 as string,",
				"          ALTERNATIVEPAYERACCOUNT as string,",
				"          DATAMEDIUMEXCHANGEINDICATOR as string,",
				"          VATLIABILITY as string,",
				"          ISBUSINESSPURPOSECOMPLETED as string,",
				"          RESPONSIBLETYPE as string,",
				"          FISCALADDRESS as string,",
				"          NFPARTNERISNATURALPERSON as string,",
				"          DELETIONINDICATOR as string,",
				"          LANGUAGE as string,",
				"          TRADINGPARTNER as string,",
				"          DELIVERYDATETYPERULE as string,",
				"          EXPRESSTRAINSTATIONNAME as string,",
				"          TRAINSTATIONNAME as string,",
				"          INTERNATIONALLOCATIONNUMBER2 as integer,",
				"          INTERNATIONALLOCATIONNUMBER3 as integer,",
				"          CITYCODE as string,",
				"          COUNTY as string,",
				"          CUSTOMERHASUNLOADINGPOINT as string,",
				"          CUSTOMERWORKINGTIMECALENDAR as string,",
				"          ISCOMPETITOR as string,",
				"          TAXINVOICEREPRESENTATIVENAME as string,",
				"          BUSINESSTYPE as string,",
				"          INDUSTRYTYPE as string,",
				"          TW_COLLVBILLINGISSUPPORTED as string,",
				"          ALTERNATIVEPAYEEISALLOWED as string,",
				"          FREEDEFINEDATTRIBUTE01 as string,",
				"          FREEDEFINEDATTRIBUTE02 as string,",
				"          FREEDEFINEDATTRIBUTE03 as string,",
				"          FREEDEFINEDATTRIBUTE04 as string,",
				"          FREEDEFINEDATTRIBUTE05 as string,",
				"          FREEDEFINEDATTRIBUTE06 as string,",
				"          FREEDEFINEDATTRIBUTE07 as string,",
				"          FREEDEFINEDATTRIBUTE08 as string,",
				"          FREEDEFINEDATTRIBUTE09 as string,",
				"          FREEDEFINEDATTRIBUTE10 as string,",
				"          PAYMENTREASON as string,",
				"          ISSALESPROSPECT as string,",
				"          PAYMENTISBLOCKEDFORCUSTOMER as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat($p_directory,'/',$p_systemName,'/gold/','I_CUSTOMER'))) ~> ICUSTOMER",
				"source(output(",
				"          CONTROLLINGAREA as string,",
				"          FISCALYEARVARIANT as string,",
				"          CONTROLLINGAREANAME as string,",
				"          CONTROLLINGAREACURRENCY as string,",
				"          CHARTOFACCOUNTS as string,",
				"          COSTCENTERSTANDARDHIERARCHY as string,",
				"          OPERATINGCONCERN as string,",
				"          PROFITCENTERSTANDARDHIERARCHY as string,",
				"          BUSINESSPROCESSSTANDARDHIER as string,",
				"          CREDITDOWNPAYMENTDEFAULTGLACCT as string,",
				"          DEBITDOWNPAYMENTDEFAULTGLACCT as string,",
				"          CONTROLLINGAREACURRENCYROLE as string,",
				"          FINANCIALMANAGEMENTAREA as string,",
				"          CONTROLLINGAREARESPONSIBLEUSER as string,",
				"          DEFAULTPROFITCENTER as string,",
				"          CTRLGSTDFINSTATEMENTVERSION as string,",
				"          PROFITCENTERACCOUNTINGCURRENCY as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat($p_directory,'/',$p_systemName,'/gold/','I_CONTROLLINGAREA'))) ~> ICONTROLLINGAREA",
				"source(output(",
				"          CONTROLLINGAREA as string,",
				"          COSTCENTER as string,",
				"          VALIDITYENDDATE as date,",
				"          VALIDITYSTARTDATE as date,",
				"          ISBLKDFORPRIMARYCOSTSPOSTING as string,",
				"          ISBLOCKEDFORPLANPRIMARYCOSTS as string,",
				"          COMPANYCODE as string,",
				"          BUSINESSAREA as string,",
				"          COSTCENTERCATEGORY as string,",
				"          COSTCTRRESPONSIBLEPERSONNAME as string,",
				"          COSTCTRRESPONSIBLEUSER as string,",
				"          COSTCENTERCURRENCY as string,",
				"          COSTINGSHEET as string,",
				"          TAXJURISDICTION as string,",
				"          PROFITCENTER as string,",
				"          PLANT as string,",
				"          LOGICALSYSTEM as string,",
				"          COSTCENTERCREATIONDATE as date,",
				"          COSTCENTERCREATEDBYUSER as string,",
				"          ISBLKDFORSECONDARYCOSTSPOSTING as string,",
				"          ISBLOCKEDFORREVENUEPOSTING as string,",
				"          ISBLOCKEDFORCOMMITMENTPOSTING as string,",
				"          ISBLOCKEDFORPLANSECONDARYCOSTS as string,",
				"          ISBLOCKEDFORPLANREVENUES as string,",
				"          COSTCENTERALLOCATIONMETHOD as string,",
				"          CONSUMPTIONQTYISRECORDED as string,",
				"          DEPARTMENT as string,",
				"          SUBSEQUENTCOSTCENTER as string,",
				"          CONDITIONUSAGE as string,",
				"          CONDITIONAPPLICATION as string,",
				"          COSTCENTERACCOUNTINGOVERHEAD as string,",
				"          COUNTRY as string,",
				"          FORMOFADDRESS as string,",
				"          ADDRESSNAME as string,",
				"          ADDRESSADDITIONALNAME as string,",
				"          COSTCENTERADDRNAME3 as string,",
				"          COSTCENTERADDRNAME4 as string,",
				"          CITYNAME as string,",
				"          DISTRICT as string,",
				"          STREETADDRESSNAME as string,",
				"          POBOX as string,",
				"          POSTALCODE as string,",
				"          POBOXPOSTALCODE as string,",
				"          REGION as string,",
				"          LANGUAGE as string,",
				"          TELEBOXNUMBER as string,",
				"          PHONENUMBER1 as string,",
				"          PHONENUMBER2 as string,",
				"          FAXNUMBER as string,",
				"          TELETEXNUMBER as string,",
				"          TELEXNUMBER as string,",
				"          DATACOMMUNICATIONPHONENUMBER as string,",
				"          COSTCENTERPRINTERDESTINATION as string,",
				"          COSTCENTERSTANDARDHIERAREA as string,",
				"          COSTCOLLECTOR as string,",
				"          COSTCENTERISCOMPLETE as string,",
				"          ISSTATISTICALCOSTCENTER as string,",
				"          OBJECTINTERNALID as string,",
				"          COSTCENTERFUNCTION as string,",
				"          COSTCENTERALTERNATIVEFUNCTION as string,",
				"          FUNCTIONALAREA as string,",
				"          ACTYINDEPFORMULAPLANNINGTMPL as string,",
				"          ACTYDEPDNTFORMULAPLANNINGTMPL as string,",
				"          ACTYINDEPENDENTALLOCATIONTMPL as string,",
				"          ACTYDEPENDENTALLOCATIONTMPL as string,",
				"          ACTLINDEPSTATISTICALKEYFIGURES as string,",
				"          ACTLDEPSTATISTICALKEYFIGURES as string,",
				"          JOINTVENTURE as string,",
				"          JOINTVENTURERECOVERYCODE as string,",
				"          JOINTVENTUREEQUITYTYPE as string,",
				"          JOINTVENTUREOBJECTTYPE as string,",
				"          JOINTVENTURECLASS as string,",
				"          JOINTVENTURESUBCLASS as string,",
				"          BUDGETCARRYINGCOSTCENTER as string,",
				"          AVAILABILITYCONTROLPROFILE as string,",
				"          AVAILABILITYCONTROLISACTIVE as string,",
				"          FUND as string,",
				"          GRANTID as string,",
				"          FUNDISFIXASSIGNED as string,",
				"          GRANTIDISFIXASSIGNED as string,",
				"          FUNCTIONALAREAISFIXASSIGNED as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer,",
				"          {_ISOLanguage} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat($p_directory,'/',$p_systemName,'/gold/','I_COSTCENTER'))) ~> ICOSTCENTER",
				"source(output(",
				"          CONTROLLINGAREA as string,",
				"          PROFITCENTER as string,",
				"          VALIDITYENDDATE as date,",
				"          PROFITCTRRESPONSIBLEPERSONNAME as string,",
				"          COMPANYCODE as string,",
				"          PROFITCTRRESPONSIBLEUSER as string,",
				"          VALIDITYSTARTDATE as date,",
				"          DEPARTMENT as string,",
				"          PROFITCENTERSTANDARDHIERARCHY as string,",
				"          SEGMENT as string,",
				"          PROFITCENTERISBLOCKED as string,",
				"          FORMULAPLANNINGTEMPLATE as string,",
				"          FORMOFADDRESS as string,",
				"          ADDRESSNAME as string,",
				"          ADDITIONALNAME as string,",
				"          PROFITCENTERADDRNAME3 as string,",
				"          PROFITCENTERADDRNAME4 as string,",
				"          STREETADDRESSNAME as string,",
				"          POBOX as string,",
				"          CITYNAME as string,",
				"          POSTALCODE as string,",
				"          POBOXPOSTALCODE as string,",
				"          DISTRICT as string,",
				"          COUNTRY as string,",
				"          REGION as string,",
				"          TAXJURISDICTION as string,",
				"          LANGUAGE as string,",
				"          PHONENUMBER1 as string,",
				"          PHONENUMBER2 as string,",
				"          TELEBOXNUMBER as string,",
				"          TELEXNUMBER as string,",
				"          FAXNUMBER as string,",
				"          TELETEXNUMBER as string,",
				"          DATACOMMUNICATIONPHONENUMBER as string,",
				"          PROFITCENTERPRINTERNAME as string,",
				"          PROFITCENTERCREATEDBYUSER as string,",
				"          PROFITCENTERCREATIONDATE as date,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer,",
				"          {_ISOLanguage} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat($p_directory,'/',$p_systemName,'/gold/','I_PROFITCENTER'))) ~> IPROFITCENTER",
				"source(output(",
				"          MANDT as string,",
				"          FUNCTIONALLOCATION as string,",
				"          FUNCLOCATIONSTRUCTURE as string,",
				"          FUNCTIONALLOCATIONCATEGORY as string,",
				"          WORKCENTERINTERNALID as integer,",
				"          WORKCENTERTYPECODE as string,",
				"          TECHNICALOBJECTTYPE as string,",
				"          MAINTOBJECTLOCACCTASSGMTNMBR as string,",
				"          CONSTRUCTIONMATERIAL as string,",
				"          CREATEDBYUSER as string,",
				"          CREATIONDATE as date,",
				"          LASTCHANGEDBYUSER as string,",
				"          LASTCHANGEDATE as date,",
				"          ASSETMANUFACTURERNAME as string,",
				"          MANUFACTURERPARTTYPENAME as string,",
				"          MAINTENANCEPLANNERGROUP as string,",
				"          MAINTENANCEPLANNINGPLANT as string,",
				"          CATALOGPROFILE as string,",
				"          AUTHORIZATIONGROUP as string,",
				"          SUPERIORFUNCTIONALLOCATION as string,",
				"          MANUFACTURERCOUNTRY as string,",
				"          CONSTRUCTIONYEAR as string,",
				"          CONSTRUCTIONMONTH as string,",
				"          ACQUISITIONVALUE as decimal(38,18),",
				"          CURRENCY as string,",
				"          ACQUISITIONDATE as date,",
				"          MAINTOBJECTINTERNALID as string,",
				"          FUNCNLLOCPOSINSUPERIORTECHOBJ as string,",
				"          MANUFACTURERPARTNMBR as string,",
				"          MANUFACTURERSERIALNUMBER as string,",
				"          INVENTORYNUMBER as string,",
				"          GROSSWEIGHT as decimal(38,18),",
				"          GROSSWEIGHTUNIT as string,",
				"          SIZEORDIMENSIONTEXT as string,",
				"          OPERATIONSTARTDATE as date,",
				"          LASTCHANGEDATETIME as decimal(38,18),",
				"          EQUIPMENTINSTALLATIONISALLOWED as string,",
				"          ONEPIECEOFEQUIPMENTISALLOWED as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat($p_directory,'/',$p_systemName,'/gold/','I_FUNCTIONALLOCATION'))) ~> IFUNCTIONALLOCATION",
				"getTimestamp derive(lastProcessedTimestamp = coalesce(lastProcessedTimestamp, toTimestamp('1900-01-01 00:00:00'))) ~> setLastProcessedTimestamp",
				"setLastProcessedTimestamp select(mapColumn(",
				"          lastProcessedTimestamp",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectLastProcessedTimestampPerSystem",
				"AcdocaSilverSource, selectLastProcessedTimestampPerSystem join(toTimestamp(byName('_UpdateTimeStamp')) > lastProcessedTimestamp,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> GetAcdocaRecordsWithMaxTimeStampOnly",
				"AddKeyIFISCALPERIODFORVARIANT, IDEBITCREDITCODE join(AddKeyIFISCALPERIODFORVARIANT@DEBITCREDITCODE == IDEBITCREDITCODE@DEBITCREDITCODE",
				"     && AddKeyIFISCALPERIODFORVARIANT@{_SystemName} == IDEBITCREDITCODE@{_SystemName},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithIDEBITCREDITCODE",
				"JoinWithIDEBITCREDITCODE select(mapColumn(",
				"          {_key_IDEBITCREDITCODE} = Key,",
				"          each(match(stream=='AddKeyIFISCALPERIODFORVARIANT'))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyIDEBITCREDITCODE",
				"GetAcdocaRecordsWithMaxTimeStampOnly, IFISCALPERIODFORVARIANT join(AcdocaSilverSource@FISCALYEARVARIANT == IFISCALPERIODFORVARIANT@FISCALYEARVARIANT",
				"     && AcdocaSilverSource@FISCALYEAR == IFISCALPERIODFORVARIANT@FISCALYEAR",
				"     && AcdocaSilverSource@FISCALPERIOD == IFISCALPERIODFORVARIANT@FISCALPERIOD",
				"     && AcdocaSilverSource@{_SystemName} == IFISCALPERIODFORVARIANT@{_SystemName},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithIFISCALPERIODFORVARIANT",
				"JoinWithIFISCALPERIODFORVARIANT select(mapColumn(",
				"          SOURCELEDGER,",
				"          COMPANYCODE,",
				"          FISCALYEAR = AcdocaSilverSource@FISCALYEAR,",
				"          ACCOUNTINGDOCUMENT,",
				"          LEDGERGLLINEITEM,",
				"          LEDGERFISCALYEAR,",
				"          GLRECORDTYPE,",
				"          JRNLENTRALTVFYCONSECUTIVEID,",
				"          CHARTOFACCOUNTS,",
				"          CONTROLLINGAREA,",
				"          FINANCIALTRANSACTIONTYPE,",
				"          GLBUSINESSTRANSACTIONTYPE,",
				"          BUSINESSTRANSACTIONCATEGORY,",
				"          BUSINESSTRANSACTIONTYPE,",
				"          FINANCIALCLOSINGSTEP,",
				"          CONTROLLINGBUSTRANSACTYPE,",
				"          REFERENCEDOCUMENTTYPE,",
				"          LOGICALSYSTEM,",
				"          REFERENCEDOCUMENTCONTEXT,",
				"          REFERENCEDOCUMENT,",
				"          REFERENCEDOCUMENTITEM,",
				"          REFERENCEDOCUMENTITEMGROUP,",
				"          TRANSACTIONSUBITEM,",
				"          ISREVERSAL,",
				"          ISREVERSED,",
				"          REVERSALREFERENCEDOCUMENTCNTXT,",
				"          REVERSALREFERENCEDOCUMENT,",
				"          REVERSALTRANSACTIONSUBITEM,",
				"          ISSETTLEMENT,",
				"          ISSETTLED,",
				"          PREDECESSORREFERENCEDOCTYPE,",
				"          PREDECESSORREFERENCEDOCCNTXT,",
				"          PREDECESSORREFERENCEDOCUMENT,",
				"          PREDECESSORREFERENCEDOCITEM,",
				"          PRDCSSRJOURNALENTRYCOMPANYCODE,",
				"          PRDCSSRJOURNALENTRYFISCALYEAR,",
				"          PREDECESSORJOURNALENTRY,",
				"          PREDECESSORJOURNALENTRYITEM,",
				"          SOURCEREFERENCEDOCUMENTTYPE,",
				"          SOURCELOGICALSYSTEM,",
				"          SOURCEREFERENCEDOCUMENTCNTXT,",
				"          SOURCEREFERENCEDOCUMENT,",
				"          SOURCEREFERENCEDOCUMENTITEM,",
				"          SOURCEREFERENCEDOCSUBITEM,",
				"          ISCOMMITMENT,",
				"          JRNLENTRYITEMOBSOLETEREASON,",
				"          JOURNALENTRYISSECONDARYENTRY,",
				"          JRNLPERIODENDCLOSINGRUNLOGUUID,",
				"          ORGANIZATIONALCHANGE,",
				"          GLACCOUNT,",
				"          COSTCENTER,",
				"          PROFITCENTER,",
				"          FUNCTIONALAREA,",
				"          BUSINESSAREA,",
				"          SEGMENT,",
				"          PARTNERCOSTCENTER,",
				"          PARTNERPROFITCENTER,",
				"          PARTNERFUNCTIONALAREA,",
				"          PARTNERBUSINESSAREA,",
				"          PARTNERCOMPANY,",
				"          PARTNERSEGMENT,",
				"          BALANCETRANSACTIONCURRENCY,",
				"          AMOUNTINBALANCETRANSACCRCY,",
				"          TRANSACTIONCURRENCY,",
				"          AMOUNTINTRANSACTIONCURRENCY,",
				"          COMPANYCODECURRENCY,",
				"          AMOUNTINCOMPANYCODECURRENCY,",
				"          GLOBALCURRENCY,",
				"          AMOUNTINGLOBALCURRENCY,",
				"          FUNCTIONALCURRENCY,",
				"          AMOUNTINFUNCTIONALCURRENCY,",
				"          FREEDEFINEDCURRENCY1,",
				"          AMOUNTINFREEDEFINEDCURRENCY1,",
				"          FREEDEFINEDCURRENCY2,",
				"          AMOUNTINFREEDEFINEDCURRENCY2,",
				"          FREEDEFINEDCURRENCY3,",
				"          AMOUNTINFREEDEFINEDCURRENCY3,",
				"          FREEDEFINEDCURRENCY4,",
				"          AMOUNTINFREEDEFINEDCURRENCY4,",
				"          FREEDEFINEDCURRENCY5,",
				"          AMOUNTINFREEDEFINEDCURRENCY5,",
				"          FREEDEFINEDCURRENCY6,",
				"          AMOUNTINFREEDEFINEDCURRENCY6,",
				"          FREEDEFINEDCURRENCY7,",
				"          AMOUNTINFREEDEFINEDCURRENCY7,",
				"          FREEDEFINEDCURRENCY8,",
				"          AMOUNTINFREEDEFINEDCURRENCY8,",
				"          FIXEDAMOUNTINGLOBALCRCY,",
				"          GRPVALNFIXEDAMTINGLOBCRCY,",
				"          PRFTCTRVALNFXDAMTINGLOBCRCY,",
				"          FIXEDAMOUNTINCOCODECRCY,",
				"          FIXEDAMOUNTINTRANSCRCY,",
				"          TOTALPRICEVARCINGLOBALCRCY,",
				"          GRPVALNTOTPRCVARCINGLOBCRCY,",
				"          PRFTCTRVALNTOTPRCVARCINGLBCRCY,",
				"          FIXEDPRICEVARCINGLOBALCRCY,",
				"          GRPVALNFIXEDPRCVARCINGLOBCRCY,",
				"          PRFTCTRVALNFXDPRCVARCINGLBCRCY,",
				"          CONTROLLINGOBJECTCURRENCY,",
				"          AMOUNTINOBJECTCURRENCY,",
				"          GRANTCURRENCY,",
				"          AMOUNTINGRANTCURRENCY,",
				"          BASEUNIT,",
				"          QUANTITY,",
				"          FIXEDQUANTITY,",
				"          COSTSOURCEUNIT,",
				"          VALUATIONQUANTITY,",
				"          VALUATIONFIXEDQUANTITY,",
				"          REFERENCEQUANTITYUNIT,",
				"          REFERENCEQUANTITY,",
				"          ADDITIONALQUANTITY1UNIT,",
				"          ADDITIONALQUANTITY1,",
				"          ADDITIONALQUANTITY2UNIT,",
				"          ADDITIONALQUANTITY2,",
				"          ADDITIONALQUANTITY3UNIT,",
				"          ADDITIONALQUANTITY3,",
				"          DEBITCREDITCODE,",
				"          FISCALPERIOD = AcdocaSilverSource@FISCALPERIOD,",
				"          FISCALYEARVARIANT = AcdocaSilverSource@FISCALYEARVARIANT,",
				"          FISCALYEARPERIOD = AcdocaSilverSource@FISCALYEARPERIOD,",
				"          POSTINGDATE,",
				"          DOCUMENTDATE,",
				"          ACCOUNTINGDOCUMENTTYPE,",
				"          ACCOUNTINGDOCUMENTITEM,",
				"          ASSIGNMENTREFERENCE,",
				"          ACCOUNTINGDOCUMENTCATEGORY,",
				"          JOURNALENTRYITEMCATEGORY,",
				"          POSTINGKEY,",
				"          TRANSACTIONTYPEDETERMINATION,",
				"          SUBLEDGERACCTLINEITEMTYPE,",
				"          ACCOUNTINGDOCCREATEDBYUSER,",
				"          LASTCHANGEDATETIME,",
				"          CREATIONDATETIME,",
				"          CREATIONDATE,",
				"          ELIMINATIONPROFITCENTER,",
				"          ORIGINOBJECTTYPE,",
				"          GLACCOUNTTYPE,",
				"          ALTERNATIVEGLACCOUNT,",
				"          COUNTRYCHARTOFACCOUNTS,",
				"          ITEMISSPLIT,",
				"          CONSOLIDATIONUNIT,",
				"          PARTNERCONSOLIDATIONUNIT,",
				"          COMPANY,",
				"          CONSOLIDATIONCHARTOFACCOUNTS,",
				"          CNSLDTNFINANCIALSTATEMENTITEM,",
				"          CNSLDTNSUBITEMCATEGORY,",
				"          CNSLDTNSUBITEM,",
				"          INVOICEREFERENCE,",
				"          INVOICEREFERENCEFISCALYEAR,",
				"          FOLLOWONDOCUMENTTYPE,",
				"          INVOICEITEMREFERENCE,",
				"          REFERENCEPURCHASEORDERCATEGORY,",
				"          PURCHASINGDOCUMENT,",
				"          PURCHASINGDOCUMENTITEM,",
				"          ACCOUNTASSIGNMENTNUMBER,",
				"          DOCUMENTITEMTEXT,",
				"          SALESDOCUMENT,",
				"          SALESDOCUMENTITEM,",
				"          PRODUCT,",
				"          PLANT,",
				"          SUPPLIER,",
				"          CUSTOMER,",
				"          SERVICESRENDEREDDATE,",
				"          PERFORMANCEPERIODSTARTDATE,",
				"          PERFORMANCEPERIODENDDATE,",
				"          CONDITIONCONTRACT,",
				"          EXCHANGERATEDATE,",
				"          FINANCIALACCOUNTTYPE,",
				"          SPECIALGLCODE,",
				"          TAXCODE,",
				"          TAXCOUNTRY,",
				"          HOUSEBANK,",
				"          HOUSEBANKACCOUNT,",
				"          ISOPENITEMMANAGED,",
				"          CLEARINGDATE,",
				"          CLEARINGDOCFISCALYEAR,",
				"          CLEARINGACCOUNTINGDOCUMENT,",
				"          CLEARINGJOURNALENTRYFISCALYEAR,",
				"          CLEARINGJOURNALENTRY,",
				"          VALUEDATE,",
				"          GENERALLEDGERAGINGSCOPE,",
				"          GENERALLEDGERAGINGINCREMENT,",
				"          ASSETDEPRECIATIONAREA,",
				"          MASTERFIXEDASSET,",
				"          FIXEDASSET,",
				"          ASSETVALUEDATE,",
				"          ASSETTRANSACTIONTYPE,",
				"          ASSETACCTTRANSCLASSFCTN,",
				"          DEPRECIATIONFISCALPERIOD,",
				"          GROUPMASTERFIXEDASSET,",
				"          GROUPFIXEDASSET,",
				"          ASSETCLASS,",
				"          PARTNERMASTERFIXEDASSET,",
				"          PARTNERFIXEDASSET,",
				"          COSTESTIMATE,",
				"          INVENTORYSPECIALSTOCKVALNTYPE,",
				"          ISSUPPLIERSTOCKVALUATION,",
				"          INVENTORYSPECIALSTOCKTYPE,",
				"          INVENTORYSPCLSTKSALESDOCUMENT,",
				"          INVENTORYSPCLSTKSALESDOCITM,",
				"          INVTRYSPCLSTOCKWBSELMNTINTID,",
				"          INVENTORYSPCLSTOCKWBSELEMENT,",
				"          INVENTORYSPECIALSTOCKSUPPLIER,",
				"          INVENTORYVALUATIONTYPE,",
				"          VALUATIONAREA,",
				"          MATERIALLEDGERPROCESSTYPE,",
				"          MATERIALLEDGERCATEGORY,",
				"          SLSPRICEAMOUNTINCOCODECRCY,",
				"          PRODUCTPRICECONTROL,",
				"          SENDERCOMPANYCODE,",
				"          SENDERGLACCOUNT,",
				"          SENDERACCOUNTASSIGNMENT,",
				"          SENDERACCOUNTASSIGNMENTTYPE,",
				"          CONTROLLINGOBJECT,",
				"          COSTORIGINGROUP,",
				"          ORIGINSENDEROBJECT,",
				"          CONTROLLINGDEBITCREDITCODE,",
				"          ORIGINCTRLGDEBITCREDITCODE,",
				"          CONTROLLINGOBJECTDEBITTYPE,",
				"          QUANTITYISINCOMPLETE,",
				"          OFFSETTINGACCOUNT,",
				"          OFFSETTINGACCOUNTTYPE,",
				"          OFFSETTINGCHARTOFACCOUNTS,",
				"          LINEITEMISCOMPLETED,",
				"          PERSONNELNUMBER,",
				"          CONTROLLINGOBJECTCLASS,",
				"          PARTNERCOMPANYCODE,",
				"          PARTNERCONTROLLINGOBJECTCLASS,",
				"          ORIGINPROFITCENTER,",
				"          ORIGINORDER,",
				"          ORIGINCOSTCTRACTIVITYTYPE,",
				"          ORIGINCOSTCENTER,",
				"          ORIGINPRODUCT,",
				"          VARIANCEORIGINGLACCOUNT,",
				"          ACCOUNTASSIGNMENT,",
				"          ACCOUNTASSIGNMENTTYPE,",
				"          COSTCTRACTIVITYTYPE,",
				"          ORDERID,",
				"          ORDERCATEGORY,",
				"          WBSELEMENTINTERNALID,",
				"          WBSELEMENT,",
				"          PARTNERWBSELEMENTINTERNALID,",
				"          PARTNERWBSELEMENT,",
				"          PROJECTINTERNALID,",
				"          PROJECT,",
				"          PARTNERPROJECTINTERNALID,",
				"          PARTNERPROJECT,",
				"          OPERATINGCONCERN,",
				"          PROJECTNETWORK,",
				"          RELATEDNETWORKACTIVITY,",
				"          BUSINESSPROCESS,",
				"          COSTOBJECT,",
				"          BILLABLECONTROL,",
				"          COSTANALYSISRESOURCE,",
				"          CUSTOMERSERVICENOTIFICATION,",
				"          SERVICEDOCUMENTTYPE,",
				"          SERVICEDOCUMENT,",
				"          SERVICEDOCUMENTITEM,",
				"          PARTNERSERVICEDOCUMENTTYPE,",
				"          PARTNERSERVICEDOCUMENT,",
				"          PARTNERSERVICEDOCUMENTITEM,",
				"          SERVICECONTRACTTYPE,",
				"          SERVICECONTRACT,",
				"          SERVICECONTRACTITEM,",
				"          BUSINESSSOLUTIONORDER,",
				"          BUSINESSSOLUTIONORDERITEM,",
				"          PROVIDERCONTRACT,",
				"          PROVIDERCONTRACTITEM,",
				"          REVENUEACCOUNTINGCONTRACT,",
				"          PERFORMANCEOBLIGATION,",
				"          TIMESHEETOVERTIMECATEGORY,",
				"          PARTNERACCOUNTASSIGNMENT,",
				"          PARTNERACCOUNTASSIGNMENTTYPE,",
				"          WORKPACKAGE,",
				"          WORKITEM,",
				"          PARTNERCOSTCTRACTIVITYTYPE,",
				"          PARTNERORDER,",
				"          PARTNERORDERCATEGORY,",
				"          PARTNERSALESDOCUMENT,",
				"          PARTNERSALESDOCUMENTITEM,",
				"          PARTNERPROJECTNETWORK,",
				"          PARTNERPROJECTNETWORKACTIVITY,",
				"          PARTNERBUSINESSPROCESS,",
				"          PARTNERCOSTOBJECT,",
				"          CONTROLLINGDOCUMENTITEM,",
				"          VARIANCEORIGINGROUP,",
				"          BILLINGDOCUMENTTYPE,",
				"          SALESORGANIZATION,",
				"          DISTRIBUTIONCHANNEL,",
				"          ORGANIZATIONDIVISION,",
				"          SOLDPRODUCT,",
				"          SOLDPRODUCTGROUP,",
				"          CUSTOMERGROUP,",
				"          CUSTOMERSUPPLIERCOUNTRY,",
				"          CUSTOMERSUPPLIERINDUSTRY,",
				"          SALESDISTRICT,",
				"          BILLTOPARTY,",
				"          SHIPTOPARTY,",
				"          CUSTOMERSUPPLIERCORPORATEGROUP,",
				"          CASHLEDGERCOMPANYCODE,",
				"          CASHLEDGERACCOUNT,",
				"          FINANCIALMANAGEMENTAREA,",
				"          FUNDSCENTER,",
				"          FUNDEDPROGRAM,",
				"          FUND,",
				"          GRANTID,",
				"          BUDGETPERIOD,",
				"          PARTNERFUND,",
				"          PARTNERGRANT,",
				"          PARTNERBUDGETPERIOD,",
				"          PUBSECBUDGETACCOUNT,",
				"          PUBSECBUDGETACCOUNTCOCODE,",
				"          PUBSECBUDGETCNSMPNDATE,",
				"          PUBSECBUDGETCNSMPNFSCLPERIOD,",
				"          PUBSECBUDGETCNSMPNFSCLYEAR,",
				"          PUBSECBUDGETISRELEVANT,",
				"          PUBSECBUDGETCNSMPNTYPE,",
				"          PUBSECBUDGETCNSMPNAMTTYPE,",
				"          SPONSOREDPROGRAM,",
				"          SPONSOREDCLASS,",
				"          GTEEMBUDGETVALIDITYNUMBER,",
				"          JOINTVENTURE,",
				"          JOINTVENTUREEQUITYGROUP,",
				"          JOINTVENTURECOSTRECOVERYCODE,",
				"          JOINTVENTUREPARTNER,",
				"          JOINTVENTUREBILLINGTYPE,",
				"          JOINTVENTUREEQUITYTYPE,",
				"          JOINTVENTUREPRODUCTIONDATE,",
				"          JOINTVENTUREBILLINGDATE,",
				"          JOINTVENTUREOPERATIONALDATE,",
				"          CUTBACKRUN,",
				"          JOINTVENTUREACCOUNTINGACTIVITY,",
				"          PARTNERVENTURE,",
				"          PARTNEREQUITYGROUP,",
				"          SENDERCOSTRECOVERYCODE,",
				"          CUTBACKACCOUNT,",
				"          CUTBACKCOSTOBJECT,",
				"          REBUSINESSENTITY,",
				"          REALESTATEBUILDING,",
				"          REALESTATEPROPERTY,",
				"          RERENTALOBJECT,",
				"          REALESTATECONTRACT,",
				"          RESERVICECHARGEKEY,",
				"          RESETTLEMENTUNITID,",
				"          SETTLEMENTREFERENCEDATE,",
				"          REPARTNERBUSINESSENTITY,",
				"          REALESTATEPARTNERBUILDING,",
				"          REALESTATEPARTNERPROPERTY,",
				"          REPARTNERRENTALOBJECT,",
				"          REALESTATEPARTNERCONTRACT,",
				"          REPARTNERSERVICECHARGEKEY,",
				"          REPARTNERSETTLEMENTUNITID,",
				"          PARTNERSETTLEMENTREFERENCEDATE,",
				"          ACCRUALOBJECTTYPE,",
				"          ACCRUALOBJECTLOGICALSYSTEM,",
				"          ACCRUALOBJECT,",
				"          ACCRUALSUBOBJECT,",
				"          ACCRUALITEMTYPE,",
				"          ACCRUALREFERENCEOBJECT,",
				"          ACCRUALVALUEDATE,",
				"          FINANCIALVALUATIONOBJECTTYPE,",
				"          FINANCIALVALUATIONOBJECT,",
				"          FINANCIALVALUATIONSUBOBJECT,",
				"          NETDUEDATE,",
				"          CREDITRISKCLASS,",
				"          WORKCENTERINTERNALID,",
				"          ORDEROPERATION,",
				"          ORDERITEM,",
				"          PARTNERORDERITEM,",
				"          ORDERSUBOPERATION,",
				"          EQUIPMENT,",
				"          FUNCTIONALLOCATION,",
				"          ASSEMBLY,",
				"          MAINTENANCEACTIVITYTYPE,",
				"          MAINTENANCEORDERPLANNINGCODE,",
				"          MAINTPRIORITYTYPE,",
				"          MAINTPRIORITY,",
				"          SUPERIORORDER,",
				"          PRODUCTGROUP,",
				"          MAINTENANCEORDERISPLANNED,",
				"          ORIGINORDEROPERATION,",
				"          JRNLENTRYITEMMIGRATIONSOURCE,",
				"          lastProcessedTimestamp,",
				"          FISCALYEARVARIANT = AcdocaSilverSource@FISCALYEARVARIANT,",
				"          FISCALYEAR = AcdocaSilverSource@FISCALYEAR,",
				"          FISCALPERIOD = AcdocaSilverSource@FISCALPERIOD,",
				"          FISCALPERIODSTARTDATE,",
				"          FISCALPERIODENDDATE,",
				"          ISSPECIALPERIOD,",
				"          FISCALYEARSTARTDATE,",
				"          FISCALYEARENDDATE,",
				"          FISCALYEARPERIOD = AcdocaSilverSource@FISCALYEARPERIOD,",
				"          NEXTFISCALPERIOD,",
				"          NEXTFISCALPERIODFISCALYEAR,",
				"          {_UpdateTimeStamp} = AcdocaSilverSource@{_UpdateTimeStamp},",
				"          {_SystemName} = AcdocaSilverSource@{_SystemName},",
				"          {_key_IFISCALPERIODFORVARIANT} = Key",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyIFISCALPERIODFORVARIANT",
				"AddKeyIDEBITCREDITCODE, IGLACCOUNTINCHARTOFACCOUNTS join(AddKeyIDEBITCREDITCODE@CHARTOFACCOUNTS == IGLACCOUNTINCHARTOFACCOUNTS@CHARTOFACCOUNTS",
				"     && AddKeyIDEBITCREDITCODE@GLACCOUNT == IGLACCOUNTINCHARTOFACCOUNTS@GLACCOUNT",
				"     && AddKeyIDEBITCREDITCODE@{_SystemName} == IGLACCOUNTINCHARTOFACCOUNTS@{_SystemName},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithIGLACCOUNTINCHARTOFACCOUNTS",
				"JoinWithIGLACCOUNTINCHARTOFACCOUNTS select(mapColumn(",
				"          {_key_IGLACCOUNTINCHARTOFACCOUNTS} = Key,",
				"          each(match(stream=='AddKeyIDEBITCREDITCODE'))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyIGLACCOUNTINCHARTOFACCOUNTS",
				"AddKeyIGLACCOUNTINCHARTOFACCOUNTS, ICOMPANYCODE join(AddKeyIGLACCOUNTINCHARTOFACCOUNTS@COMPANYCODE == ICOMPANYCODE@COMPANYCODE",
				"     && AddKeyIGLACCOUNTINCHARTOFACCOUNTS@{_SystemName} == ICOMPANYCODE@{_SystemName},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinWithICOMPANYCODE",
				"JoinWithICOMPANYCODE select(mapColumn(",
				"          {_key_ICOMPANYCODE} = Key,",
				"          each(match(stream=='AddKeyIGLACCOUNTINCHARTOFACCOUNTS'))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyICOMPANYCODE",
				"AddKeyICOMPANYCODE, ISEGMENT join(AddKeyICOMPANYCODE@SEGMENT == ISEGMENT@SEGMENT",
				"     && AddKeyICOMPANYCODE@{_SystemName} == ISEGMENT@{_SystemName},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithISEGMENT",
				"JoinWithISEGMENT select(mapColumn(",
				"          {_key_ISEGMENT} = Key,",
				"          each(match(stream=='AddKeyICOMPANYCODE'))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyISEGMENT",
				"AddKeyISEGMENT, IFUNCTIONALAREA join(AddKeyISEGMENT@FUNCTIONALAREA == IFUNCTIONALAREA@FUNCTIONALAREA",
				"     && AddKeyISEGMENT@{_SystemName} == IFUNCTIONALAREA@{_SystemName},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithIFUNCTIONALAREA",
				"JoinWithIFUNCTIONALAREA select(mapColumn(",
				"          {_key_IFUNCTIONALAREA} = Key,",
				"          each(match(stream=='AddKeyISEGMENT'))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyIFUNCTIONALAREA",
				"AddKeyIFUNCTIONALAREA, IACCOUNTINGDOCUMENTTYPE join(AddKeyIFUNCTIONALAREA@ACCOUNTINGDOCUMENTTYPE == IACCOUNTINGDOCUMENTTYPE@ACCOUNTINGDOCUMENTTYPE",
				"     && AddKeyIFUNCTIONALAREA@{_SystemName} == IACCOUNTINGDOCUMENTTYPE@{_SystemName},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithIACCOUNTINGDOCUMENTTYPE",
				"JoinWithIACCOUNTINGDOCUMENTTYPE select(mapColumn(",
				"          {_key_IACCOUNTINGDOCUMENTTYPE} = Key,",
				"          each(match(stream=='AddKeyIFUNCTIONALAREA'))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyIACCOUNTINGDOCUMENTTYPE",
				"AddKeyIACCOUNTINGDOCUMENTTYPE, IGLOBALCOMPANY join(AddKeyIACCOUNTINGDOCUMENTTYPE@COMPANY == IGLOBALCOMPANY@COMPANY",
				"     && AddKeyIACCOUNTINGDOCUMENTTYPE@{_SystemName} == IGLOBALCOMPANY@{_SystemName},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithPARTNERCOMPANY",
				"JoinWithPARTNERCOMPANY select(mapColumn(",
				"          {_key_IGLOBALCOMPANYPartnerCompany} = Key,",
				"          each(match(stream=='AddKeyIACCOUNTINGDOCUMENTTYPE'))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyPARTNERCOMPANY",
				"AddKeyPARTNERCOMPANY, IGLOBALCOMPANY join(AddKeyPARTNERCOMPANY@COMPANY == IGLOBALCOMPANY@COMPANY",
				"     && AddKeyPARTNERCOMPANY@{_SystemName} == IGLOBALCOMPANY@{_SystemName},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithCOMPANY",
				"JoinWithCOMPANY select(mapColumn(",
				"          {_key_IGLOBALCOMPANYCompany} = Key,",
				"          each(match(stream=='AddKeyPARTNERCOMPANY'))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyCOMPANY",
				"AddKeyCOMPANY, IFISCALYEARFORCOMPANYCODE join(AddKeyCOMPANY@COMPANYCODE == IFISCALYEARFORCOMPANYCODE@COMPANYCODE",
				"     && AddKeyCOMPANY@FISCALYEAR == IFISCALYEARFORCOMPANYCODE@FISCALYEAR",
				"     && AddKeyCOMPANY@{_SystemName} == IFISCALYEARFORCOMPANYCODE@{_SystemName},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithIFISCALYEARFORCOMPANYCODE",
				"JoinWithIFISCALYEARFORCOMPANYCODE select(mapColumn(",
				"          {_key_IFISCALYEARFORCOMPANYCODE} = Key,",
				"          each(match(stream=='AddKeyCOMPANY'))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyIFISCALYEARFORCOMPANYCODE",
				"AddKeyIFISCALYEARFORCOMPANYCODE, IFISCALYEARVARIANT join(AddKeyIFISCALYEARFORCOMPANYCODE@FISCALYEARVARIANT == IFISCALYEARVARIANT@FISCALYEARVARIANT",
				"     && AddKeyIFISCALYEARFORCOMPANYCODE@{_SystemName} == IFISCALYEARVARIANT@{_SystemName},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithIFISCALYEARVARIANT",
				"JoinWithIFISCALYEARVARIANT select(mapColumn(",
				"          {_key_IFISCALYEARVARIANT} = Key,",
				"          each(match(stream=='AddKeyIFISCALYEARFORCOMPANYCODE'))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyIFISCALYEARVARIANT",
				"AddKeyIFISCALYEARVARIANT, IWBSELEMENTDATA2 join(AddKeyIFISCALYEARVARIANT@WBSELEMENTINTERNALID == IWBSELEMENTDATA2@WBSELEMENTINTERNALID",
				"     && AddKeyIFISCALYEARVARIANT@{_SystemName} == IWBSELEMENTDATA2@{_SystemName},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithIWBSELEMENTDATA2",
				"JoinWithIWBSELEMENTDATA2 select(mapColumn(",
				"          {_key_IWBSELEMENTDATA2} = Key,",
				"          each(match(stream=='AddKeyIFISCALYEARVARIANT'))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyIWBSELEMENTDATA2",
				"AddKeyIWBSELEMENTDATA2, IASSETTRANSACTIONTYPE join(AddKeyIWBSELEMENTDATA2@ASSETTRANSACTIONTYPE == IASSETTRANSACTIONTYPE@ASSETTRANSACTIONTYPE",
				"     && AddKeyIWBSELEMENTDATA2@{_SystemName} == IASSETTRANSACTIONTYPE@{_SystemName},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinWithIASSETTRANSACTIONTYPE",
				"JoinWithIASSETTRANSACTIONTYPE select(mapColumn(",
				"          {_key_IASSETTRANSACTIONTYPE} = Key,",
				"          each(match(stream=='AddKeyIWBSELEMENTDATA2'))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyIASSETTRANSACTIONTYPE",
				"AddKeyIASSETTRANSACTIONTYPE, ILEDGER join(SOURCELEDGER == LEDGER",
				"     && AddKeyIASSETTRANSACTIONTYPE@{_SystemName} == ILEDGER@{_SystemName},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithILEDGER",
				"JoinWithILEDGER select(mapColumn(",
				"          {_key_ILEDGER} = Key,",
				"          each(match(stream=='AddKeyIASSETTRANSACTIONTYPE'))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyILEDGER",
				"AddKeyILEDGER, IFIXEDASSET join(AddKeyILEDGER@COMPANYCODE == IFIXEDASSET@COMPANYCODE",
				"     && AddKeyILEDGER@FIXEDASSET == IFIXEDASSET@FIXEDASSET",
				"     && AddKeyILEDGER@MASTERFIXEDASSET == IFIXEDASSET@MASTERFIXEDASSET",
				"     && AddKeyILEDGER@{_SystemName} == IFIXEDASSET@{_SystemName},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithIFIXEDASSET",
				"JoinWithIFIXEDASSET select(mapColumn(",
				"          {_key_IFIXEDASSET} = Key,",
				"          each(match(stream=='AddKeyILEDGER'))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyIFIXEDASSET",
				"AddKeyIFIXEDASSET, IASSETCLASS join(AddKeyIFIXEDASSET@ASSETCLASS == IASSETCLASS@ASSETCLASS",
				"     && AddKeyIFIXEDASSET@{_SystemName} == IASSETCLASS@{_SystemName},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithIASSETCLASS",
				"JoinWithIASSETCLASS select(mapColumn(",
				"          {_key_IASSETCLASS} = Key,",
				"          each(match(stream=='AddKeyIFIXEDASSET'))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyIASSETCLASS",
				"AddKeyIASSETCLASS, IEQUIPMENT join(AddKeyIASSETCLASS@EQUIPMENT == IEQUIPMENT@EQUIPMENT",
				"     && AddKeyIASSETCLASS@{_SystemName} == IEQUIPMENT@{_SystemName},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithIEQUIPMENT",
				"JoinWithIEQUIPMENT select(mapColumn(",
				"          {_key_IEQUIPMENT} = Key,",
				"          each(match(stream=='AddKeyIASSETCLASS'))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyIEQUIPMENT",
				"AddKeyIEQUIPMENT, ICHARTOFACCOUNTS join(AddKeyIEQUIPMENT@CHARTOFACCOUNTS == ICHARTOFACCOUNTS@CHARTOFACCOUNTS",
				"     && AddKeyIEQUIPMENT@{_SystemName} == ICHARTOFACCOUNTS@{_SystemName},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithICHARTOFACCOUNTS",
				"JoinWithICHARTOFACCOUNTS select(mapColumn(",
				"          {_key_ICHARTOFACCOUNTS} = Key,",
				"          each(match(stream=='AddKeyIEQUIPMENT'))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyICHARTOFACCOUNTS",
				"AddKeyICHARTOFACCOUNTS, IBUSINESSAREA join(AddKeyICHARTOFACCOUNTS@BUSINESSAREA == IBUSINESSAREA@BUSINESSAREA,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithIBUSINESSAREA",
				"JoinWithIBUSINESSAREA select(mapColumn(",
				"          {_key_IBUSINESSAREA} = Key,",
				"          each(match(stream=='AddKeyICHARTOFACCOUNTS'))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyIBUSINESSAREA",
				"AddKeyIBUSINESSAREA, IPLANT join(AddKeyIBUSINESSAREA@PLANT == IPLANT@PLANT",
				"     && AddKeyIBUSINESSAREA@{_SystemName} == IPLANT@{_SystemName},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithIPLANT",
				"JoinWithIPLANT select(mapColumn(",
				"          {_key_IPLANT} = Key,",
				"          each(match(stream=='AddKeyIBUSINESSAREA'))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyIPLANT",
				"AddKeyIPLANT, IPRODUCT join(AddKeyIPLANT@PRODUCT == IPRODUCT@PRODUCT",
				"     && AddKeyIPLANT@{_SystemName} == IPRODUCT@{_SystemName},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithIPRODUCT",
				"JoinWithIPRODUCT select(mapColumn(",
				"          {_key_IPRODUCT} = Key,",
				"          each(match(stream=='AddKeyIPLANT'))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyIPRODUCT",
				"AddKeyIPRODUCT, ISUPPLIER join(AddKeyIPRODUCT@SUPPLIER == ISUPPLIER@SUPPLIER",
				"     && AddKeyIPRODUCT@{_SystemName} == ISUPPLIER@{_SystemName},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithISUPPLIER",
				"JoinWithISUPPLIER select(mapColumn(",
				"          {_key_ISUPPLIER} = Key,",
				"          each(match(stream=='AddKeyIPRODUCT'))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyISUPPLIER",
				"AddKeyISUPPLIER, IPRODUCTGROUP2 join(AddKeyISUPPLIER@PRODUCTGROUP == IPRODUCTGROUP2@PRODUCTGROUP",
				"     && AddKeyISUPPLIER@{_SystemName} == IPRODUCTGROUP2@{_SystemName},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithIPRODUCTGROUP2",
				"JoinWithIPRODUCTGROUP2 select(mapColumn(",
				"          {_key_IPRODUCTGROUP2} = Key,",
				"          each(match(stream=='AddKeyISUPPLIER'))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyIPRODUCTGROUP2",
				"AddKeyIPRODUCTGROUP2, ICUSTOMER join(AddKeyIPRODUCTGROUP2@CUSTOMER == ICUSTOMER@CUSTOMER",
				"     && AddKeyIPRODUCTGROUP2@{_SystemName} == ICUSTOMER@{_SystemName},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithICUSTOMER",
				"JoinWithICUSTOMER select(mapColumn(",
				"          {_key_ICUSTOMER} = Key,",
				"          each(match(stream=='AddKeyIPRODUCTGROUP2'))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyICUSTOMER",
				"AddKeyICUSTOMER, ICONTROLLINGAREA join(AddKeyICUSTOMER@CONTROLLINGAREA == ICONTROLLINGAREA@CONTROLLINGAREA",
				"     && AddKeyICUSTOMER@{_SystemName} == ICONTROLLINGAREA@{_SystemName},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithICONTROLLINGAREA",
				"JoinWithICONTROLLINGAREA select(mapColumn(",
				"          {_key_ICONTROLLINGAREA} = Key,",
				"          each(match(stream=='AddKeyICUSTOMER'))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyICONTROLLINGAREA",
				"ReplaceNULLDimensions alterRow(upsertIf(true())) ~> AlterUpsert",
				"GetAcdocaRecordsWithMaxTimeStampOnly aggregate(newMaxTimestamp = max(toTimestamp(byName('_UpdateTimeStamp')))) ~> getNewMaxTimestamp",
				"getNewMaxTimestamp, selectLastProcessedTimestampPerSystem join(true(),",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> retrieveOldTimestamp",
				"retrieveOldTimestamp derive(CDSViewName = $p_name,",
				"          systemName = $p_systemName,",
				"          lastProcessedTimestamp = coalesce(toTimestamp(byName('newMaxTimestamp')), toTimestamp(byName('lastProcessedTimestamp')))) ~> setRowToUpdateTimestamp",
				"setRowToUpdateTimestamp alterRow(updateIf(true())) ~> allowUpdateLastProcessedTimestamp",
				"AddKeyICONTROLLINGAREA, distinctICOSTCENTER join(AddKeyICONTROLLINGAREA@CONTROLLINGAREA == distinctICOSTCENTER@CONTROLLINGAREA",
				"     && AddKeyICONTROLLINGAREA@COSTCENTER == distinctICOSTCENTER@COSTCENTER",
				"     && AddKeyICONTROLLINGAREA@{_SystemName} == distinctICOSTCENTER@{_SystemName},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithICOSTCENTER",
				"JoinWithICOSTCENTER select(mapColumn(",
				"          {_key_ICOSTCENTER} = Key,",
				"          each(match(stream=='AddKeyICONTROLLINGAREA'),",
				"               /* Input name */$$ = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyICOSTCENTER",
				"AddKeyICOSTCENTER, distinctIPROFITCENTER join(AddKeyICOSTCENTER@CONTROLLINGAREA == distinctIPROFITCENTER@CONTROLLINGAREA",
				"     && AddKeyICOSTCENTER@PROFITCENTER == distinctIPROFITCENTER@PROFITCENTER",
				"     && AddKeyICOSTCENTER@{_SystemName} == distinctIPROFITCENTER@{_SystemName},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithIPROFITCENTER",
				"JoinWithIPROFITCENTER select(mapColumn(",
				"          {_key_IPROFITCENTER} = Key,",
				"          each(match(stream=='AddKeyICOSTCENTER'),",
				"               /* Input name */$$ = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyIPROFITCENTER",
				"AddKeyIPROFITCENTER, IFUNCTIONALLOCATION join(AddKeyIPROFITCENTER@FUNCTIONALLOCATION == IFUNCTIONALLOCATION@FUNCTIONALLOCATION",
				"     && AddKeyIPROFITCENTER@{_SystemName} == IFUNCTIONALLOCATION@{_SystemName},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithIFUNCTIONALLOCATION",
				"JoinWithIFUNCTIONALLOCATION select(mapColumn(",
				"          {_key_IFUNCTIONALLOCATION} = Key,",
				"          each(match(stream=='AddKeyIPROFITCENTER'))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyIFUNCTIONALLOCATION",
				"AddKeyIFUNCTIONALLOCATION derive(each(match(startsWith(name,'_key_')), $$ = coalesce($$, -1))) ~> ReplaceNULLDimensions",
				"ICOSTCENTER select(mapColumn(",
				"          CONTROLLINGAREA,",
				"          COSTCENTER,",
				"          {_SystemName},",
				"          Key,",
				"          {_ISOLanguage}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectICOSTCENTER",
				"selectICOSTCENTER aggregate(groupBy(mycols = sha2(256,columns())),",
				"     each(match(true()), $$ = first($$))) ~> distinctICOSTCENTER",
				"IPROFITCENTER select(mapColumn(",
				"          CONTROLLINGAREA,",
				"          PROFITCENTER,",
				"          {_SystemName},",
				"          Key,",
				"          {_ISOLanguage}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectIPROFITCENTER",
				"selectIPROFITCENTER aggregate(groupBy(mycols = sha2(256,columns())),",
				"     each(match(true()), $$ = first($$))) ~> distinctIPROFITCENTER",
				"AlterUpsert sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat($p_directory,'/',$p_systemName,'/gold/',$p_name)),",
				"     mergeSchema: false,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable: false,",
				"     insertable: true,",
				"     updateable: false,",
				"     upsertable: true,",
				"     keys:['ACCOUNTINGDOCUMENT','COMPANYCODE','FISCALYEAR','LEDGERGLLINEITEM','SOURCELEDGER','_SystemName'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1) ~> GoldUpsertDataLakeTarget",
				"allowUpdateLastProcessedTimestamp sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CDSViewName as string,",
				"          inScope as boolean",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['CDSViewName','systemName'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 2,",
				"     errorHandlingOption: 'stopOnFirstError') ~> updateLastProcessedTimestamp",
				"AlterUpsert sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     store: 'synapseanalytics',",
				"     schemaName: ('dmgold'),",
				"     tableName: ($p_name),",
				"     insertable: true,",
				"     updateable: false,",
				"     deletable: false,",
				"     upsertable: true,",
				"     keys:['ACCOUNTINGDOCUMENT','COMPANYCODE','FISCALYEAR','LEDGERGLLINEITEM','SOURCELEDGER','_SystemName'],",
				"     allowCopyCommand: true,",
				"     staged: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     errorHandlingOption: 'stopOnFirstError') ~> GoldUpsertSQLPoolTarget"
			]
		}
	}
}
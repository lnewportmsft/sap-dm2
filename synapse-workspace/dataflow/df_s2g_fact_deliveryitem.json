{
	"name": "df_s2g_fact_deliveryitem",
	"properties": {
		"description": "I_DELIVERYDOCUMENTITEM",
		"folder": {
			"name": "SIlver_To_Gold"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "DeliveryItemSilverSource",
					"description": "Fact dataset on the Silver Area"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "DeliveryItemSilverSourceDelete"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "IPLANTSource"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "IPRODUCTSource"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "IPROFITCENTERSource"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "IDISTRIBUTIONCHANNELSource"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "IDIVISIONSource"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "ICONTROLLINGAREAAreaSource"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "IPRODUCTGROUP2Source"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "ICOSTCENTERSource"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "IBUSINESSAREASource"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "ISALESGROUPSource"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "ISALESOFFICESource"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "IWAREHOUSESource"
				},
				{
					"dataset": {
						"referenceName": "ds_metadata",
						"type": "DatasetReference"
					},
					"name": "getTimestamp"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "GoldDeleteTarget"
				},
				{
					"linkedService": {
						"referenceName": "ls_dataLake",
						"type": "LinkedServiceReference"
					},
					"name": "GoldUpsertTarget"
				},
				{
					"linkedService": {
						"referenceName": "ls_SQLPool",
						"type": "LinkedServiceReference"
					},
					"name": "SQLDeleteTarget"
				},
				{
					"linkedService": {
						"referenceName": "ls_SQLPool",
						"type": "LinkedServiceReference"
					},
					"name": "SQLUpsertTarget",
					"description": "Export data to I_DELIVERYDOCUMENTITEM"
				},
				{
					"dataset": {
						"referenceName": "ds_metadata",
						"type": "DatasetReference"
					},
					"name": "updateLastProcessedTimestamp"
				}
			],
			"transformations": [
				{
					"name": "GetRecordsWithMaxTimeStampOnly"
				},
				{
					"name": "AllowDelete"
				},
				{
					"name": "AllowUpsert"
				},
				{
					"name": "JoinWithIPLANT"
				},
				{
					"name": "JoinWithIPROFITCENTER"
				},
				{
					"name": "JoinWithIDISTRIBUTIONCHANNEL"
				},
				{
					"name": "JoinWithIDIVISION"
				},
				{
					"name": "JoinWithICONTROLLINGAREA"
				},
				{
					"name": "JoinWithIPRODUCTGROUP2"
				},
				{
					"name": "JoinWithICOSTCENTER"
				},
				{
					"name": "JoinWithIPRODUCT"
				},
				{
					"name": "AddKeyIPLANT"
				},
				{
					"name": "AddKeyIPROFITCENTER"
				},
				{
					"name": "AddKeyIDISTRIBUTIONCHANNEL"
				},
				{
					"name": "AddKeyIDIVISION"
				},
				{
					"name": "AddKeyICONTROLLINGAREA"
				},
				{
					"name": "AddKeyIPRODUCTGROUP2"
				},
				{
					"name": "AddKeyICOSTCENTER"
				},
				{
					"name": "AddKeyIPRODUCT"
				},
				{
					"name": "JoinWithIBUSINESSAREA"
				},
				{
					"name": "AddKeyIBUSINESSAREA"
				},
				{
					"name": "JoinWithISALESGROUP"
				},
				{
					"name": "AddKeyISALESGROUP"
				},
				{
					"name": "JoinWithISALESOFFICE"
				},
				{
					"name": "AddKeyISALESOFFICE"
				},
				{
					"name": "JoinWithIWAREHOUSE"
				},
				{
					"name": "AddKeyIWAREHOUSE"
				},
				{
					"name": "SelectIPROFITCENTER"
				},
				{
					"name": "distinctIPROFITCENTER"
				},
				{
					"name": "SelectICOSTCENTER"
				},
				{
					"name": "distinctICOSTCENTER"
				},
				{
					"name": "filterLastProcessedTimestampForSystem"
				},
				{
					"name": "setLastProcessedTimestamp"
				},
				{
					"name": "selectLastProcessedTimestampPerSystem"
				},
				{
					"name": "getNewMaxTimestamp"
				},
				{
					"name": "retrieveOldTimestamp"
				},
				{
					"name": "setRowToUpdateTimestamp"
				},
				{
					"name": "allowUpdateLastProcessedTimestamp"
				},
				{
					"name": "ReplaceNULLDimensions"
				},
				{
					"name": "GetDeletedRecordsWithMaxTimeStampOnly"
				},
				{
					"name": "AddKeyColumns"
				}
			],
			"scriptLines": [
				"parameters{",
				"     p_name as string (\"I_DELIVERYDOCUMENTITEM\"),",
				"     p_directory as string (\"data\"),",
				"     p_container as string (\"sap\"),",
				"     p_systemName as string (\"PM4CLNT400\"),",
				"     p_keyFields as string[] (['DELIVERYDOCUMENT','DELIVERYDOCUMENTITEM'])",
				"}",
				"source(output(",
				"          DELIVERYDOCUMENT as string,",
				"          DELIVERYDOCUMENTITEM as integer,",
				"          SDDOCUMENTCATEGORY as string,",
				"          TRANSACTIONCURRENCY as string,",
				"          DELIVERYDOCUMENTITEMCATEGORY as string,",
				"          SALESDOCUMENTITEMTYPE as string,",
				"          CREATEDBYUSER as string,",
				"          CREATIONDATE as date,",
				"          CREATIONTIME as string,",
				"          LASTCHANGEDATE as date,",
				"          DISTRIBUTIONCHANNEL as string,",
				"          DIVISION as string,",
				"          SALESGROUP as string,",
				"          SALESOFFICE as string,",
				"          DEPARTMENTCLASSIFICATIONBYCUST as string,",
				"          MATERIAL as string,",
				"          PRODUCT as string,",
				"          MATERIALBYCUSTOMER as string,",
				"          ORIGINALLYREQUESTEDMATERIAL as string,",
				"          INTERNATIONALARTICLENUMBER as string,",
				"          BATCH as string,",
				"          BATCHCLASSIFICATION as integer,",
				"          BATCHBYSUPPLIER as string,",
				"          MATERIALISINTBATCHMANAGED as string,",
				"          MATERIALISBATCHMANAGED as string,",
				"          MATERIALGROUP as string,",
				"          PRODUCTGROUP as string,",
				"          MATERIALFREIGHTGROUP as string,",
				"          ADDITIONALMATERIALGROUP1 as string,",
				"          ADDITIONALMATERIALGROUP2 as string,",
				"          ADDITIONALMATERIALGROUP3 as string,",
				"          ADDITIONALMATERIALGROUP4 as string,",
				"          ADDITIONALMATERIALGROUP5 as string,",
				"          PLANT as string,",
				"          WAREHOUSE as string,",
				"          STORAGELOCATION as string,",
				"          STORAGEBIN as string,",
				"          STORAGETYPE as string,",
				"          DELIVERYITEMRESOURCEID as string,",
				"          LOADINGPOINTFORDELIVERY as string,",
				"          INVENTORYSPECIALSTOCKTYPE as string,",
				"          SHELFLIFEEXPIRATIONDATE as date,",
				"          NUMBEROFSERIALNUMBERS as integer,",
				"          PRODUCTCONFIGURATION as integer,",
				"          PRODUCTHIERARCHYNODE as string,",
				"          MANUFACTUREDATE as date,",
				"          DELIVERYDOCUMENTITEMTEXT as string,",
				"          HIGHERLEVELITEM as integer,",
				"          HIGHERLVLITMOFBATSPLTITM as integer,",
				"          ACTUALDELIVERYQUANTITY as decimal(20,3),",
				"          QUANTITYISFIXED as string,",
				"          ORIGINALDELIVERYQUANTITY as decimal(20,3),",
				"          DELIVERYQUANTITYUNIT as string,",
				"          ACTUALDELIVEREDQTYINBASEUNIT as decimal(20,3),",
				"          BASEUNIT as string,",
				"          DELIVERYTOBASEQUANTITYDNMNTR as decimal(5,0),",
				"          DELIVERYTOBASEQUANTITYNMRTR as decimal(5,0),",
				"          PRODUCTAVAILABILITYDATE as date,",
				"          PRODUCTAVAILABILITYTIME as string,",
				"          DELIVERYGROUP as integer,",
				"          ITEMGROSSWEIGHT as decimal(20,3),",
				"          ITEMNETWEIGHT as decimal(20,3),",
				"          ITEMWEIGHTUNIT as string,",
				"          ITEMVOLUME as decimal(20,3),",
				"          ITEMVOLUMEUNIT as string,",
				"          INSPECTIONLOT as integer,",
				"          INSPECTIONPARTIALLOT as integer,",
				"          PARTIALDELIVERYISALLOWED as string,",
				"          UNLIMITEDOVERDELIVERYISALLOWED as string,",
				"          OVERDELIVTOLRTDLMTRATIOINPCT as decimal(18,1),",
				"          UNDERDELIVTOLRTDLMTRATIOINPCT as decimal(18,1),",
				"          WAREHOUSESTORAGEBIN as string,",
				"          BOMEXPLOSION as string,",
				"          CUSTENGINEERINGCHGSTATUS as string,",
				"          WAREHOUSESTAGINGAREA as string,",
				"          WAREHOUSESTOCKCATEGORY as string,",
				"          ISSGORRCVGSTOCKCATEGORY as string,",
				"          ISSGORRCVGMATERIAL as string,",
				"          ISSUINGORRECEIVINGPLANT as string,",
				"          ISSUINGORRECEIVINGSTORAGELOC as string,",
				"          ISSGORRCVGBATCH as string,",
				"          ISSGORRCVGVALUATIONTYPE as string,",
				"          ISSGORRCVGSPCLSTOCKIND as string,",
				"          ISSGORRCVGRESOURCEID as string,",
				"          PRIMARYPOSTINGSWITCH as string,",
				"          STOCKTYPE as string,",
				"          ISNOTGOODSMOVEMENTSRELEVANT as string,",
				"          GLACCOUNT as string,",
				"          GOODSMOVEMENTREASONCODE as integer,",
				"          SUBSEQUENTMOVEMENTTYPE as string,",
				"          ISCOMPLETELYDELIVERED as string,",
				"          ALTERNATEPRODUCTNUMBER as string,",
				"          CUMULATIVEBATCHQTYINBASEUNIT as decimal(20,3),",
				"          PICKINGCONTROL as string,",
				"          LOADINGGROUP as string,",
				"          GOODSMOVEMENTTYPE as string,",
				"          TRANSPORTATIONGROUP as string,",
				"          RECEIVINGPOINT as string,",
				"          FIXEDSHIPGPROCGDURATIONINDAYS as decimal(19,2),",
				"          VARBLSHIPGPROCGDURATIONINDAYS as decimal(19,2),",
				"          PROOFOFDELIVERYRELEVANCECODE as string,",
				"          ITEMISBILLINGRELEVANT as string,",
				"          ITEMBILLINGBLOCKREASON as string,",
				"          PAYMENTGUARANTEEFORM as string,",
				"          INTERCOMPANYBILLINGSTATUS as string,",
				"          BUSINESSAREA as string,",
				"          CONTROLLINGAREA as string,",
				"          PROFITABILITYSEGMENT as integer,",
				"          PROFITABILITYSEGMENT_2 as string,",
				"          PROFITCENTER as string,",
				"          INVENTORYVALUATIONTYPE as string,",
				"          ISSEPARATEVALUATION as string,",
				"          CONSUMPTIONPOSTING as string,",
				"          ORDERID as string,",
				"          ORDERITEM as integer,",
				"          COSTCENTER as string,",
				"          DELIVERYDOCUMENTITEMBYSUPPLIER as integer,",
				"          REFERENCESDDOCUMENT as string,",
				"          REFERENCESDDOCUMENTITEM as integer,",
				"          REFERENCESDDOCUMENTCATEGORY as string,",
				"          PURCHASEORDER as string,",
				"          PURCHASEORDERITEM as integer,",
				"          REFERENCEDOCUMENTLOGICALSYSTEM as string,",
				"          ADDITIONALCUSTOMERGROUP1 as string,",
				"          ADDITIONALCUSTOMERGROUP2 as string,",
				"          ADDITIONALCUSTOMERGROUP3 as string,",
				"          ADDITIONALCUSTOMERGROUP4 as string,",
				"          ADDITIONALCUSTOMERGROUP5 as string,",
				"          RETAILPROMOTION as string,",
				"          STATISTICSDATE as date,",
				"          INTDELIVERYSCHEDULENUMBER as integer,",
				"          SCHEDULINGAGREEMENTRELEASETYPE as string,",
				"          SDPROCESSSTATUS as string,",
				"          PICKINGCONFIRMATIONSTATUS as string,",
				"          PICKINGSTATUS as string,",
				"          WAREHOUSEACTIVITYSTATUS as string,",
				"          PACKINGSTATUS as string,",
				"          GOODSMOVEMENTSTATUS as string,",
				"          DELIVERYRELATEDBILLINGSTATUS as string,",
				"          PROOFOFDELIVERYSTATUS as string,",
				"          ITEMGENERALINCOMPLETIONSTATUS as string,",
				"          ITEMDELIVERYINCOMPLETIONSTATUS as string,",
				"          ITEMPICKINGINCOMPLETIONSTATUS as string,",
				"          ITEMGDSMVTINCOMPLETIONSTS as string,",
				"          ITEMPACKINGINCOMPLETIONSTATUS as string,",
				"          ITEMBILLINGINCOMPLETIONSTATUS as string,",
				"          EU_DELIVERYITEMARCSTATUS as string,",
				"          REQUIREMENTSEGMENT as string,",
				"          STOCKSEGMENT as string,",
				"          PRODUCTSEASONYEAR as string,",
				"          PRODUCTSEASON as string,",
				"          PRODUCTCOLLECTION as string,",
				"          PRODUCTTHEME as string,",
				"          PRODUCTCHARACTERISTIC1 as string,",
				"          PRODUCTCHARACTERISTIC2 as string,",
				"          PRODUCTCHARACTERISTIC3 as string,",
				"          ITEMHASVALUEADDEDSERVICE as string,",
				"          VALADDEDSRVCPARENTITMNUMBER as integer,",
				"          VALADDEDSRVCTRANSACTIONNUMBER as string,",
				"          VALADDEDSRVCITEMGROUP as integer,",
				"          VALADDEDSRVCITEMNUMBER as integer,",
				"          ORIGINSDDOCUMENT as string,",
				"          SDDOCUMENTITEM as integer,",
				"          SALESSDDOCUMENTCATEGORY as string,",
				"          MATERIALTYPEPRIMARY as string,",
				"          COSTINDOCUMENTCURRENCY as decimal(19,2),",
				"          SUBTOTAL1AMOUNT as decimal(19,2),",
				"          SUBTOTAL2AMOUNT as decimal(19,2),",
				"          SUBTOTAL3AMOUNT as decimal(19,2),",
				"          SUBTOTAL4AMOUNT as decimal(19,2),",
				"          SUBTOTAL5AMOUNT as decimal(19,2),",
				"          SUBTOTAL6AMOUNT as decimal(19,2),",
				"          ORDERDOCUMENT as string,",
				"          PLANNINGMATERIAL as string,",
				"          PLANNINGPLANT as string,",
				"          PRODUCTGROUPBASEUNIT as string,",
				"          CONVERSIONFACTOR as double,",
				"          ISRETURNSITEM as string,",
				"          RETURNSDELIVERYITEMCODE as string,",
				"          CONDITIONUNIT as string,",
				"          NETPRICEAMOUNT as decimal(19,2),",
				"          TOTALNETAMOUNT as decimal(19,2),",
				"          QTYINPURCHASEORDERPRICEUNIT as decimal(20,3),",
				"          CREDITRELATEDPRICE as double,",
				"          CREDITRELATEDPRICEAMOUNT as decimal(19,2),",
				"          DELIVERYTOBASEUNITCNVRSNFCTR as double,",
				"          FUNCTIONALAREA as string,",
				"          RFMRESERVATION as integer,",
				"          RFMRESERVATIONITEM as integer,",
				"          RESERVATION as integer,",
				"          RESERVATIONITEM as integer,",
				"          RESERVATIONRECORDTYPE as string,",
				"          CHMLCMPLNCSTATUS as string,",
				"          DANGEROUSGOODSSTATUS as string,",
				"          SAFETYDATASHEETSTATUS as string,",
				"          TRDCMPLNCEMBARGOSTS as string,",
				"          TRDCMPLNCSNCTNDLISTCHKSTS as string,",
				"          TRDCMPLNCLEGALCONTROLSTS as string,",
				"          HIGHERLEVELITEMUSAGE as string,",
				"          FLDLOGSSTATUS as string,",
				"          BATCHSEARCHSTRATEGY as string,",
				"          VALUECHAININSTANCECHAR32UUID as string,",
				"          VALUECHAINCATEGORY as string,",
				"          INTCOREFSDDOCUMENTCATEGORY as string,",
				"          INTCOREFSDDOCUMENT as string,",
				"          INTCOREFSDDOCUMENTITEM as integer,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat('data/',$p_systemName,'/silver/','I_DELIVERYDOCUMENTITEM'))) ~> DeliveryItemSilverSource",
				"source(output(",
				"          DELIVERYDOCUMENT as string,",
				"          DELIVERYDOCUMENTITEM as integer,",
				"          SDDOCUMENTCATEGORY as string,",
				"          TRANSACTIONCURRENCY as string,",
				"          DELIVERYDOCUMENTITEMCATEGORY as string,",
				"          SALESDOCUMENTITEMTYPE as string,",
				"          CREATEDBYUSER as string,",
				"          CREATIONDATE as date,",
				"          CREATIONTIME as string,",
				"          LASTCHANGEDATE as date,",
				"          DISTRIBUTIONCHANNEL as string,",
				"          DIVISION as string,",
				"          SALESGROUP as string,",
				"          SALESOFFICE as string,",
				"          DEPARTMENTCLASSIFICATIONBYCUST as string,",
				"          MATERIAL as string,",
				"          PRODUCT as string,",
				"          MATERIALBYCUSTOMER as string,",
				"          ORIGINALLYREQUESTEDMATERIAL as string,",
				"          INTERNATIONALARTICLENUMBER as string,",
				"          BATCH as string,",
				"          BATCHCLASSIFICATION as integer,",
				"          BATCHBYSUPPLIER as string,",
				"          MATERIALISINTBATCHMANAGED as string,",
				"          MATERIALISBATCHMANAGED as string,",
				"          MATERIALGROUP as string,",
				"          PRODUCTGROUP as string,",
				"          MATERIALFREIGHTGROUP as string,",
				"          ADDITIONALMATERIALGROUP1 as string,",
				"          ADDITIONALMATERIALGROUP2 as string,",
				"          ADDITIONALMATERIALGROUP3 as string,",
				"          ADDITIONALMATERIALGROUP4 as string,",
				"          ADDITIONALMATERIALGROUP5 as string,",
				"          PLANT as string,",
				"          WAREHOUSE as string,",
				"          STORAGELOCATION as string,",
				"          STORAGEBIN as string,",
				"          STORAGETYPE as string,",
				"          DELIVERYITEMRESOURCEID as string,",
				"          LOADINGPOINTFORDELIVERY as string,",
				"          INVENTORYSPECIALSTOCKTYPE as string,",
				"          SHELFLIFEEXPIRATIONDATE as date,",
				"          NUMBEROFSERIALNUMBERS as integer,",
				"          PRODUCTCONFIGURATION as integer,",
				"          PRODUCTHIERARCHYNODE as string,",
				"          MANUFACTUREDATE as date,",
				"          DELIVERYDOCUMENTITEMTEXT as string,",
				"          HIGHERLEVELITEM as integer,",
				"          HIGHERLVLITMOFBATSPLTITM as integer,",
				"          ACTUALDELIVERYQUANTITY as decimal(20,3),",
				"          QUANTITYISFIXED as string,",
				"          ORIGINALDELIVERYQUANTITY as decimal(20,3),",
				"          DELIVERYQUANTITYUNIT as string,",
				"          ACTUALDELIVEREDQTYINBASEUNIT as decimal(20,3),",
				"          BASEUNIT as string,",
				"          DELIVERYTOBASEQUANTITYDNMNTR as decimal(5,0),",
				"          DELIVERYTOBASEQUANTITYNMRTR as decimal(5,0),",
				"          PRODUCTAVAILABILITYDATE as date,",
				"          PRODUCTAVAILABILITYTIME as string,",
				"          DELIVERYGROUP as integer,",
				"          ITEMGROSSWEIGHT as decimal(20,3),",
				"          ITEMNETWEIGHT as decimal(20,3),",
				"          ITEMWEIGHTUNIT as string,",
				"          ITEMVOLUME as decimal(20,3),",
				"          ITEMVOLUMEUNIT as string,",
				"          INSPECTIONLOT as integer,",
				"          INSPECTIONPARTIALLOT as integer,",
				"          PARTIALDELIVERYISALLOWED as string,",
				"          UNLIMITEDOVERDELIVERYISALLOWED as string,",
				"          OVERDELIVTOLRTDLMTRATIOINPCT as decimal(18,1),",
				"          UNDERDELIVTOLRTDLMTRATIOINPCT as decimal(18,1),",
				"          WAREHOUSESTORAGEBIN as string,",
				"          BOMEXPLOSION as string,",
				"          CUSTENGINEERINGCHGSTATUS as string,",
				"          WAREHOUSESTAGINGAREA as string,",
				"          WAREHOUSESTOCKCATEGORY as string,",
				"          ISSGORRCVGSTOCKCATEGORY as string,",
				"          ISSGORRCVGMATERIAL as string,",
				"          ISSUINGORRECEIVINGPLANT as string,",
				"          ISSUINGORRECEIVINGSTORAGELOC as string,",
				"          ISSGORRCVGBATCH as string,",
				"          ISSGORRCVGVALUATIONTYPE as string,",
				"          ISSGORRCVGSPCLSTOCKIND as string,",
				"          ISSGORRCVGRESOURCEID as string,",
				"          PRIMARYPOSTINGSWITCH as string,",
				"          STOCKTYPE as string,",
				"          ISNOTGOODSMOVEMENTSRELEVANT as string,",
				"          GLACCOUNT as string,",
				"          GOODSMOVEMENTREASONCODE as integer,",
				"          SUBSEQUENTMOVEMENTTYPE as string,",
				"          ISCOMPLETELYDELIVERED as string,",
				"          ALTERNATEPRODUCTNUMBER as string,",
				"          CUMULATIVEBATCHQTYINBASEUNIT as decimal(20,3),",
				"          PICKINGCONTROL as string,",
				"          LOADINGGROUP as string,",
				"          GOODSMOVEMENTTYPE as string,",
				"          TRANSPORTATIONGROUP as string,",
				"          RECEIVINGPOINT as string,",
				"          FIXEDSHIPGPROCGDURATIONINDAYS as decimal(19,2),",
				"          VARBLSHIPGPROCGDURATIONINDAYS as decimal(19,2),",
				"          PROOFOFDELIVERYRELEVANCECODE as string,",
				"          ITEMISBILLINGRELEVANT as string,",
				"          ITEMBILLINGBLOCKREASON as string,",
				"          PAYMENTGUARANTEEFORM as string,",
				"          INTERCOMPANYBILLINGSTATUS as string,",
				"          BUSINESSAREA as string,",
				"          CONTROLLINGAREA as string,",
				"          PROFITABILITYSEGMENT as integer,",
				"          PROFITABILITYSEGMENT_2 as string,",
				"          PROFITCENTER as string,",
				"          INVENTORYVALUATIONTYPE as string,",
				"          ISSEPARATEVALUATION as string,",
				"          CONSUMPTIONPOSTING as string,",
				"          ORDERID as string,",
				"          ORDERITEM as integer,",
				"          COSTCENTER as string,",
				"          DELIVERYDOCUMENTITEMBYSUPPLIER as integer,",
				"          REFERENCESDDOCUMENT as string,",
				"          REFERENCESDDOCUMENTITEM as integer,",
				"          REFERENCESDDOCUMENTCATEGORY as string,",
				"          PURCHASEORDER as string,",
				"          PURCHASEORDERITEM as integer,",
				"          REFERENCEDOCUMENTLOGICALSYSTEM as string,",
				"          ADDITIONALCUSTOMERGROUP1 as string,",
				"          ADDITIONALCUSTOMERGROUP2 as string,",
				"          ADDITIONALCUSTOMERGROUP3 as string,",
				"          ADDITIONALCUSTOMERGROUP4 as string,",
				"          ADDITIONALCUSTOMERGROUP5 as string,",
				"          RETAILPROMOTION as string,",
				"          STATISTICSDATE as date,",
				"          INTDELIVERYSCHEDULENUMBER as integer,",
				"          SCHEDULINGAGREEMENTRELEASETYPE as string,",
				"          SDPROCESSSTATUS as string,",
				"          PICKINGCONFIRMATIONSTATUS as string,",
				"          PICKINGSTATUS as string,",
				"          WAREHOUSEACTIVITYSTATUS as string,",
				"          PACKINGSTATUS as string,",
				"          GOODSMOVEMENTSTATUS as string,",
				"          DELIVERYRELATEDBILLINGSTATUS as string,",
				"          PROOFOFDELIVERYSTATUS as string,",
				"          ITEMGENERALINCOMPLETIONSTATUS as string,",
				"          ITEMDELIVERYINCOMPLETIONSTATUS as string,",
				"          ITEMPICKINGINCOMPLETIONSTATUS as string,",
				"          ITEMGDSMVTINCOMPLETIONSTS as string,",
				"          ITEMPACKINGINCOMPLETIONSTATUS as string,",
				"          ITEMBILLINGINCOMPLETIONSTATUS as string,",
				"          EU_DELIVERYITEMARCSTATUS as string,",
				"          REQUIREMENTSEGMENT as string,",
				"          STOCKSEGMENT as string,",
				"          PRODUCTSEASONYEAR as string,",
				"          PRODUCTSEASON as string,",
				"          PRODUCTCOLLECTION as string,",
				"          PRODUCTTHEME as string,",
				"          PRODUCTCHARACTERISTIC1 as string,",
				"          PRODUCTCHARACTERISTIC2 as string,",
				"          PRODUCTCHARACTERISTIC3 as string,",
				"          ITEMHASVALUEADDEDSERVICE as string,",
				"          VALADDEDSRVCPARENTITMNUMBER as integer,",
				"          VALADDEDSRVCTRANSACTIONNUMBER as string,",
				"          VALADDEDSRVCITEMGROUP as integer,",
				"          VALADDEDSRVCITEMNUMBER as integer,",
				"          ORIGINSDDOCUMENT as string,",
				"          SDDOCUMENTITEM as integer,",
				"          SALESSDDOCUMENTCATEGORY as string,",
				"          MATERIALTYPEPRIMARY as string,",
				"          COSTINDOCUMENTCURRENCY as decimal(19,2),",
				"          SUBTOTAL1AMOUNT as decimal(19,2),",
				"          SUBTOTAL2AMOUNT as decimal(19,2),",
				"          SUBTOTAL3AMOUNT as decimal(19,2),",
				"          SUBTOTAL4AMOUNT as decimal(19,2),",
				"          SUBTOTAL5AMOUNT as decimal(19,2),",
				"          SUBTOTAL6AMOUNT as decimal(19,2),",
				"          ORDERDOCUMENT as string,",
				"          PLANNINGMATERIAL as string,",
				"          PLANNINGPLANT as string,",
				"          PRODUCTGROUPBASEUNIT as string,",
				"          CONVERSIONFACTOR as double,",
				"          ISRETURNSITEM as string,",
				"          RETURNSDELIVERYITEMCODE as string,",
				"          CONDITIONUNIT as string,",
				"          NETPRICEAMOUNT as decimal(19,2),",
				"          TOTALNETAMOUNT as decimal(19,2),",
				"          QTYINPURCHASEORDERPRICEUNIT as decimal(20,3),",
				"          CREDITRELATEDPRICE as double,",
				"          CREDITRELATEDPRICEAMOUNT as decimal(19,2),",
				"          DELIVERYTOBASEUNITCNVRSNFCTR as double,",
				"          FUNCTIONALAREA as string,",
				"          RFMRESERVATION as integer,",
				"          RFMRESERVATIONITEM as integer,",
				"          RESERVATION as integer,",
				"          RESERVATIONITEM as integer,",
				"          RESERVATIONRECORDTYPE as string,",
				"          CHMLCMPLNCSTATUS as string,",
				"          DANGEROUSGOODSSTATUS as string,",
				"          SAFETYDATASHEETSTATUS as string,",
				"          TRDCMPLNCEMBARGOSTS as string,",
				"          TRDCMPLNCSNCTNDLISTCHKSTS as string,",
				"          TRDCMPLNCLEGALCONTROLSTS as string,",
				"          HIGHERLEVELITEMUSAGE as string,",
				"          FLDLOGSSTATUS as string,",
				"          BATCHSEARCHSTRATEGY as string,",
				"          VALUECHAININSTANCECHAR32UUID as string,",
				"          VALUECHAINCATEGORY as string,",
				"          INTCOREFSDDOCUMENTCATEGORY as string,",
				"          INTCOREFSDDOCUMENT as string,",
				"          INTCOREFSDDOCUMENTITEM as integer,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat('data/',$p_systemName,'/silver/delete/','I_DELIVERYDOCUMENTITEM'))) ~> DeliveryItemSilverSourceDelete",
				"source(output(",
				"          PLANT as string,",
				"          PLANTNAME as string,",
				"          VALUATIONAREA as string,",
				"          PLANTCUSTOMER as string,",
				"          PLANTSUPPLIER as string,",
				"          FACTORYCALENDAR as string,",
				"          DEFAULTPURCHASINGORGANIZATION as string,",
				"          SALESORGANIZATION as string,",
				"          ADDRESSID as string,",
				"          PLANTCATEGORY as string,",
				"          DISTRIBUTIONCHANNEL as string,",
				"          DIVISION as string,",
				"          LANGUAGE as string,",
				"          ISMARKEDFORARCHIVING as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat('data/',$p_systemName,'/gold/','I_PLANT'))) ~> IPLANTSource",
				"source(output(",
				"          PRODUCT as string,",
				"          PRODUCTEXTERNALID as string,",
				"          PRODUCTOID as string,",
				"          PRODUCTTYPE as string,",
				"          CREATIONDATE as date,",
				"          CREATIONTIME as string,",
				"          CREATIONDATETIME as decimal(28,7),",
				"          CREATEDBYUSER as string,",
				"          LASTCHANGEDATE as date,",
				"          LASTCHANGEDBYUSER as string,",
				"          ISMARKEDFORDELETION as string,",
				"          CROSSPLANTSTATUS as string,",
				"          CROSSPLANTSTATUSVALIDITYDATE as date,",
				"          PRODUCTOLDID as string,",
				"          GROSSWEIGHT as decimal(20,3),",
				"          PURCHASEORDERQUANTITYUNIT as integer,",
				"          SOURCEOFSUPPLY as string,",
				"          WEIGHTUNIT as integer,",
				"          COUNTRYOFORIGIN as string,",
				"          COMPETITORID as string,",
				"          PRODUCTGROUP as string,",
				"          BASEUNIT as integer,",
				"          ITEMCATEGORYGROUP as string,",
				"          NETWEIGHT as decimal(20,3),",
				"          PRODUCTHIERARCHY as string,",
				"          DIVISION as string,",
				"          VARBLPURORDUNITISACTIVE as string,",
				"          VOLUMEUNIT as integer,",
				"          MATERIALVOLUME as decimal(20,3),",
				"          SALESSTATUS as string,",
				"          TRANSPORTATIONGROUP as string,",
				"          SALESSTATUSVALIDITYDATE as date,",
				"          AUTHORIZATIONGROUP as string,",
				"          ANPCODE as integer,",
				"          PRODUCTCATEGORY as string,",
				"          BRAND as string,",
				"          PROCUREMENTRULE as string,",
				"          VALIDITYSTARTDATE as date,",
				"          LOWLEVELCODE as string,",
				"          PRODNOINGENPRODINPREPACKPROD as string,",
				"          SERIALIDENTIFIERASSGMTPROFILE as string,",
				"          SIZEORDIMENSIONTEXT as string,",
				"          INDUSTRYSTANDARDNAME as string,",
				"          PRODUCTSTANDARDID as string,",
				"          INTERNATIONALARTICLENUMBERCAT as string,",
				"          PRODUCTISCONFIGURABLE as string,",
				"          ISBATCHMANAGEMENTREQUIRED as string,",
				"          HASEMPTIESBOM as string,",
				"          EXTERNALPRODUCTGROUP as string,",
				"          CROSSPLANTCONFIGURABLEPRODUCT as string,",
				"          SERIALNOEXPLICITNESSLEVEL as string,",
				"          PRODUCTMANUFACTURERNUMBER as string,",
				"          MANUFACTURERNUMBER as string,",
				"          MANUFACTURERPARTPROFILE as string,",
				"          QLTYMGMTINPROCMTISACTIVE as string,",
				"          ISAPPROVEDBATCHRECORDREQD as string,",
				"          HANDLINGINDICATOR as string,",
				"          WAREHOUSEPRODUCTGROUP as string,",
				"          WAREHOUSESTORAGECONDITION as string,",
				"          STANDARDHANDLINGUNITTYPE as string,",
				"          SERIALNUMBERPROFILE as string,",
				"          ADJUSTMENTPROFILE as string,",
				"          PREFERREDUNITOFMEASURE as integer,",
				"          ISPILFERABLE as string,",
				"          ISRELEVANTFORHZDSSUBSTANCES as string,",
				"          QUARANTINEPERIOD as decimal(17,0),",
				"          TIMEUNITFORQUARANTINEPERIOD as integer,",
				"          QUALITYINSPECTIONGROUP as string,",
				"          HANDLINGUNITTYPE as string,",
				"          HASVARIABLETAREWEIGHT as string,",
				"          MAXIMUMPACKAGINGLENGTH as decimal(20,3),",
				"          MAXIMUMPACKAGINGWIDTH as decimal(20,3),",
				"          MAXIMUMPACKAGINGHEIGHT as decimal(20,3),",
				"          MAXIMUMCAPACITY as decimal(20,3),",
				"          OVERCAPACITYTOLERANCE as decimal(18,1),",
				"          UNITFORMAXPACKAGINGDIMENSIONS as integer,",
				"          BASEUNITSPECIFICPRODUCTLENGTH as decimal(20,3),",
				"          BASEUNITSPECIFICPRODUCTWIDTH as decimal(20,3),",
				"          BASEUNITSPECIFICPRODUCTHEIGHT as decimal(20,3),",
				"          PRODUCTMEASUREMENTUNIT as integer,",
				"          PRODUCTVALIDSTARTDATE as date,",
				"          ARTICLECATEGORY as string,",
				"          CONTENTUNIT as integer,",
				"          NETCONTENT as decimal(20,3),",
				"          COMPARISONPRICEQUANTITY as decimal(5,0),",
				"          GROSSCONTENT as decimal(20,3),",
				"          PRODUCTVALIDENDDATE as date,",
				"          ASSORTMENTLISTTYPE as string,",
				"          HASTEXTILEPARTSWTHANIMALORIGIN as string,",
				"          PRODUCTSEASONUSAGECATEGORY as string,",
				"          INDUSTRYSECTOR as string,",
				"          CHANGENUMBER as string,",
				"          MATERIALREVISIONLEVEL as string,",
				"          ISACTIVEENTITY as string,",
				"          LASTCHANGEDATETIME as decimal(28,7),",
				"          LASTCHANGETIME as string,",
				"          DANGEROUSGOODSINDPROFILE as string,",
				"          PRODUCTUUID as binary,",
				"          PRODSUPCHNMGMTUUID22 as string,",
				"          PRODUCTDOCUMENTCHANGENUMBER as string,",
				"          PRODUCTDOCUMENTPAGECOUNT as integer,",
				"          PRODUCTDOCUMENTPAGENUMBER as string,",
				"          OWNINVENTORYMANAGEDPRODUCT as string,",
				"          DOCUMENTISCREATEDBYCAD as string,",
				"          PRODUCTIONORINSPECTIONMEMOTXT as string,",
				"          PRODUCTIONMEMOPAGEFORMAT as string,",
				"          GLOBALTRADEITEMNUMBERVARIANT as string,",
				"          PRODUCTISHIGHLYVISCOUS as string,",
				"          TRANSPORTISINBULK as string,",
				"          PRODALLOCDETNPROCEDURE as string,",
				"          PRODEFFCTYPARAMVALSAREASSIGNED as string,",
				"          PRODISENVIRONMENTALLYRELEVANT as string,",
				"          LABORATORYORDESIGNOFFICE as string,",
				"          PACKAGINGMATERIALGROUP as string,",
				"          PRODUCTISLOCKED as string,",
				"          DISCOUNTINKINDELIGIBILITY as string,",
				"          SMARTFORMNAME as string,",
				"          PACKINGREFERENCEPRODUCT as string,",
				"          BASICMATERIAL as string,",
				"          PRODUCTDOCUMENTNUMBER as string,",
				"          PRODUCTDOCUMENTVERSION as string,",
				"          PRODUCTDOCUMENTTYPE as string,",
				"          PRODUCTDOCUMENTPAGEFORMAT as string,",
				"          PRODUCTCONFIGURATION as integer,",
				"          SEGMENTATIONSTRATEGY as string,",
				"          SEGMENTATIONISRELEVANT as string,",
				"          ISCHEMICALCOMPLIANCERELEVANT as string,",
				"          MANUFACTURERBOOKPARTNUMBER as string,",
				"          LOGISTICALPRODUCTCATEGORY as string,",
				"          SALESPRODUCT as string,",
				"          PRODCHARC1INTERNALNUMBER as integer,",
				"          PRODCHARC2INTERNALNUMBER as integer,",
				"          PRODCHARC3INTERNALNUMBER as integer,",
				"          PRODUCTCHARACTERISTIC1 as string,",
				"          PRODUCTCHARACTERISTIC2 as string,",
				"          PRODUCTCHARACTERISTIC3 as string,",
				"          DFSAMMUNITIONGROUPCODE as string,",
				"          DFSRICIDENTIFIER as long,",
				"          DFSPRODUCTSENSITIVITY as string,",
				"          DFSMANUFACTURERPARTLONGNUMBER as string,",
				"          DFSMATLCONDITIONMGMT as string,",
				"          DFSRETURNDELIVERY as string,",
				"          DFSLOGISTICSLEVEL as string,",
				"          DFSNATIONALITEMIDNNUMBER as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat('data/',$p_systemName,'/gold/','I_PRODUCT'))) ~> IPRODUCTSource",
				"source(output(",
				"          CONTROLLINGAREA as string,",
				"          PROFITCENTER as string,",
				"          VALIDITYENDDATE as date,",
				"          PROFITCTRRESPONSIBLEPERSONNAME as string,",
				"          COMPANYCODE as string,",
				"          PROFITCTRRESPONSIBLEUSER as string,",
				"          VALIDITYSTARTDATE as date,",
				"          DEPARTMENT as string,",
				"          PROFITCENTERSTANDARDHIERARCHY as string,",
				"          SEGMENT as string,",
				"          PROFITCENTERISBLOCKED as string,",
				"          FORMULAPLANNINGTEMPLATE as string,",
				"          FORMOFADDRESS as string,",
				"          ADDRESSNAME as string,",
				"          ADDITIONALNAME as string,",
				"          PROFITCENTERADDRNAME3 as string,",
				"          PROFITCENTERADDRNAME4 as string,",
				"          STREETADDRESSNAME as string,",
				"          POBOX as string,",
				"          CITYNAME as string,",
				"          POSTALCODE as string,",
				"          POBOXPOSTALCODE as string,",
				"          DISTRICT as string,",
				"          COUNTRY as string,",
				"          REGION as string,",
				"          TAXJURISDICTION as string,",
				"          LANGUAGE as string,",
				"          PHONENUMBER1 as string,",
				"          PHONENUMBER2 as string,",
				"          TELEBOXNUMBER as string,",
				"          TELEXNUMBER as string,",
				"          FAXNUMBER as string,",
				"          TELETEXNUMBER as string,",
				"          DATACOMMUNICATIONPHONENUMBER as string,",
				"          PROFITCENTERPRINTERNAME as string,",
				"          PROFITCENTERCREATEDBYUSER as string,",
				"          PROFITCENTERCREATIONDATE as date,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer,",
				"          {_ISOLanguage} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat('data/',$p_systemName,'/gold/','I_PROFITCENTER'))) ~> IPROFITCENTERSource",
				"source(output(",
				"          DISTRIBUTIONCHANNEL as string,",
				"          DISTRIBUTIONCHANNELOID as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat('data/',$p_systemName,'/gold/','I_DISTRIBUTIONCHANNEL'))) ~> IDISTRIBUTIONCHANNELSource",
				"source(output(",
				"          DIVISION as string,",
				"          DIVISIONOID as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat('data/',$p_systemName,'/gold/','I_DIVISION'))) ~> IDIVISIONSource",
				"source(output(",
				"          CONTROLLINGAREA as string,",
				"          FISCALYEARVARIANT as string,",
				"          CONTROLLINGAREANAME as string,",
				"          CONTROLLINGAREACURRENCY as integer,",
				"          CHARTOFACCOUNTS as string,",
				"          COSTCENTERSTANDARDHIERARCHY as string,",
				"          OPERATINGCONCERN as string,",
				"          PROFITCENTERSTANDARDHIERARCHY as string,",
				"          BUSINESSPROCESSSTANDARDHIER as string,",
				"          CREDITDOWNPAYMENTDEFAULTGLACCT as string,",
				"          DEBITDOWNPAYMENTDEFAULTGLACCT as string,",
				"          CONTROLLINGAREACURRENCYROLE as string,",
				"          FINANCIALMANAGEMENTAREA as string,",
				"          CONTROLLINGAREARESPONSIBLEUSER as string,",
				"          DEFAULTPROFITCENTER as string,",
				"          CTRLGSTDFINSTATEMENTVERSION as string,",
				"          PROFITCENTERACCOUNTINGCURRENCY as integer,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat('data/',$p_systemName,'/gold/','I_CONTROLLINGAREA'))) ~> ICONTROLLINGAREAAreaSource",
				"source(output(",
				"          PRODUCTGROUP as string,",
				"          AUTHORIZATIONGROUP as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat('data/',$p_systemName,'/gold/','I_PRODUCTGROUP_2'))) ~> IPRODUCTGROUP2Source",
				"source(output(",
				"          CONTROLLINGAREA as string,",
				"          COSTCENTER as string,",
				"          VALIDITYENDDATE as date,",
				"          VALIDITYSTARTDATE as date,",
				"          ISBLKDFORPRIMARYCOSTSPOSTING as string,",
				"          ISBLOCKEDFORPLANPRIMARYCOSTS as string,",
				"          COMPANYCODE as string,",
				"          BUSINESSAREA as string,",
				"          COSTCENTERCATEGORY as string,",
				"          COSTCTRRESPONSIBLEPERSONNAME as string,",
				"          COSTCTRRESPONSIBLEUSER as string,",
				"          COSTCENTERCURRENCY as string,",
				"          COSTINGSHEET as string,",
				"          TAXJURISDICTION as string,",
				"          PROFITCENTER as string,",
				"          PLANT as string,",
				"          LOGICALSYSTEM as string,",
				"          COSTCENTERCREATIONDATE as date,",
				"          COSTCENTERCREATEDBYUSER as string,",
				"          ISBLKDFORSECONDARYCOSTSPOSTING as string,",
				"          ISBLOCKEDFORREVENUEPOSTING as string,",
				"          ISBLOCKEDFORCOMMITMENTPOSTING as string,",
				"          ISBLOCKEDFORPLANSECONDARYCOSTS as string,",
				"          ISBLOCKEDFORPLANREVENUES as string,",
				"          COSTCENTERALLOCATIONMETHOD as string,",
				"          CONSUMPTIONQTYISRECORDED as string,",
				"          DEPARTMENT as string,",
				"          SUBSEQUENTCOSTCENTER as string,",
				"          CONDITIONUSAGE as string,",
				"          CONDITIONAPPLICATION as string,",
				"          COSTCENTERACCOUNTINGOVERHEAD as string,",
				"          COUNTRY as string,",
				"          FORMOFADDRESS as string,",
				"          ADDRESSNAME as string,",
				"          ADDRESSADDITIONALNAME as string,",
				"          COSTCENTERADDRNAME3 as string,",
				"          COSTCENTERADDRNAME4 as string,",
				"          CITYNAME as string,",
				"          DISTRICT as string,",
				"          STREETADDRESSNAME as string,",
				"          POBOX as string,",
				"          POSTALCODE as string,",
				"          POBOXPOSTALCODE as string,",
				"          REGION as string,",
				"          LANGUAGE as string,",
				"          TELEBOXNUMBER as string,",
				"          PHONENUMBER1 as string,",
				"          PHONENUMBER2 as string,",
				"          FAXNUMBER as string,",
				"          TELETEXNUMBER as string,",
				"          TELEXNUMBER as string,",
				"          DATACOMMUNICATIONPHONENUMBER as string,",
				"          COSTCENTERPRINTERDESTINATION as string,",
				"          COSTCENTERSTANDARDHIERAREA as string,",
				"          COSTCOLLECTOR as string,",
				"          COSTCENTERISCOMPLETE as string,",
				"          ISSTATISTICALCOSTCENTER as string,",
				"          OBJECTINTERNALID as string,",
				"          COSTCENTERFUNCTION as string,",
				"          COSTCENTERALTERNATIVEFUNCTION as string,",
				"          FUNCTIONALAREA as string,",
				"          ACTYINDEPFORMULAPLANNINGTMPL as string,",
				"          ACTYDEPDNTFORMULAPLANNINGTMPL as string,",
				"          ACTYINDEPENDENTALLOCATIONTMPL as string,",
				"          ACTYDEPENDENTALLOCATIONTMPL as string,",
				"          ACTLINDEPSTATISTICALKEYFIGURES as string,",
				"          ACTLDEPSTATISTICALKEYFIGURES as string,",
				"          JOINTVENTURE as string,",
				"          JOINTVENTURERECOVERYCODE as string,",
				"          JOINTVENTUREEQUITYTYPE as string,",
				"          JOINTVENTUREOBJECTTYPE as string,",
				"          JOINTVENTURECLASS as string,",
				"          JOINTVENTURESUBCLASS as string,",
				"          BUDGETCARRYINGCOSTCENTER as string,",
				"          AVAILABILITYCONTROLPROFILE as string,",
				"          AVAILABILITYCONTROLISACTIVE as string,",
				"          FUND as string,",
				"          GRANTID as string,",
				"          FUNDISFIXASSIGNED as string,",
				"          GRANTIDISFIXASSIGNED as string,",
				"          FUNCTIONALAREAISFIXASSIGNED as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer,",
				"          {_ISOLanguage} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat('data/',$p_systemName,'/gold/','I_COSTCENTER'))) ~> ICOSTCENTERSource",
				"source(output(",
				"          BUSINESSAREA as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat('data/',$p_systemName,'/gold/','I_BUSINESSAREA'))) ~> IBUSINESSAREASource",
				"source(output(",
				"          MANDT as string,",
				"          SALESGROUP as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat('data/',$p_systemName,'/gold/','I_SALESGROUP'))) ~> ISALESGROUPSource",
				"source(output(",
				"          MANDT as string,",
				"          SALESOFFICE as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat('data/',$p_systemName,'/gold/','I_SALESOFFICE'))) ~> ISALESOFFICESource",
				"source(output(",
				"          MANDT as string,",
				"          WAREHOUSE as string,",
				"          {_UpdateTimeStamp} as timestamp,",
				"          {_SystemName} as string,",
				"          Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat('data/',$p_systemName,'/gold/','I_WAREHOUSE'))) ~> IWAREHOUSESource",
				"source(output(",
				"          CDSViewName as string,",
				"          inScope as boolean,",
				"          systemName as string,",
				"          checkpointId as string,",
				"          maxId as long,",
				"          lastProcessedTimestamp as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: (\"SELECT * FROM dbo.extractionScope WHERE CDSViewName = \\'\" + $p_name + \"\\'\"),",
				"     format: 'query') ~> getTimestamp",
				"DeliveryItemSilverSource, selectLastProcessedTimestampPerSystem join(toTimestamp(byName('_UpdateTimeStamp')) > lastProcessedTimestamp,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> GetRecordsWithMaxTimeStampOnly",
				"AddKeyColumns alterRow(deleteIf(true())) ~> AllowDelete",
				"ReplaceNULLDimensions alterRow(upsertIf(true())) ~> AllowUpsert",
				"GetRecordsWithMaxTimeStampOnly, IPLANTSource join(DeliveryItemSilverSource@PLANT == IPLANTSource@PLANT,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithIPLANT",
				"AddKeyIPLANT, distinctIPROFITCENTER join(AddKeyIPLANT@PROFITCENTER == distinctIPROFITCENTER@PROFITCENTER",
				"     && AddKeyIPLANT@CONTROLLINGAREA == distinctIPROFITCENTER@PROFITCENTER,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithIPROFITCENTER",
				"AddKeyIPROFITCENTER, IDISTRIBUTIONCHANNELSource join(AddKeyIPROFITCENTER@DISTRIBUTIONCHANNEL == IDISTRIBUTIONCHANNELSource@DISTRIBUTIONCHANNEL,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithIDISTRIBUTIONCHANNEL",
				"AddKeyIDISTRIBUTIONCHANNEL, IDIVISIONSource join(AddKeyIDISTRIBUTIONCHANNEL@DIVISION == IDIVISIONSource@DIVISION,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithIDIVISION",
				"AddKeyIDIVISION, ICONTROLLINGAREAAreaSource join(AddKeyIDIVISION@CONTROLLINGAREA == ICONTROLLINGAREAAreaSource@CONTROLLINGAREA,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithICONTROLLINGAREA",
				"AddKeyICONTROLLINGAREA, IPRODUCTGROUP2Source join(AddKeyICONTROLLINGAREA@PRODUCTGROUP == IPRODUCTGROUP2Source@PRODUCTGROUP,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithIPRODUCTGROUP2",
				"AddKeyIPRODUCTGROUP2, distinctICOSTCENTER join(AddKeyIPRODUCTGROUP2@COSTCENTER == distinctICOSTCENTER@COSTCENTER",
				"     && AddKeyIPRODUCTGROUP2@CONTROLLINGAREA == distinctICOSTCENTER@CONTROLLINGAREA,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithICOSTCENTER",
				"AddKeyICOSTCENTER, IPRODUCTSource join(AddKeyICOSTCENTER@PRODUCT == IPRODUCTSource@PRODUCT,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithIPRODUCT",
				"JoinWithIPLANT select(mapColumn(",
				"          {_key_IPLANT} = Key,",
				"          each(match(stream==\"DeliveryItemSilverSource\"))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyIPLANT",
				"JoinWithIPROFITCENTER select(mapColumn(",
				"          {_key_IPROFITCENTER} = Key,",
				"          each(match(stream==\"AddKeyIPLANT\"),",
				"               /* Input name */$$ = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyIPROFITCENTER",
				"JoinWithIDISTRIBUTIONCHANNEL select(mapColumn(",
				"          {_key_IDISTRIBUTIONCHANNEL} = Key,",
				"          each(match(stream==\"AddKeyIPROFITCENTER\"),",
				"               /* Input name */$$ = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyIDISTRIBUTIONCHANNEL",
				"JoinWithIDIVISION select(mapColumn(",
				"          {_key_IDIVISION} = Key,",
				"          each(match(stream==\"AddKeyIDISTRIBUTIONCHANNEL\"),",
				"               /* Input name */$$ = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyIDIVISION",
				"JoinWithICONTROLLINGAREA select(mapColumn(",
				"          {_key_ICONTROLLINGAREA} = Key,",
				"          each(match(stream==\"AddKeyIDIVISION\"),",
				"               /* Input name */$$ = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyICONTROLLINGAREA",
				"JoinWithIPRODUCTGROUP2 select(mapColumn(",
				"          {_key_IPRODUCTGROUP2} = Key,",
				"          each(match(stream==\"AddKeyICONTROLLINGAREA\"),",
				"               /* Input name */$$ = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyIPRODUCTGROUP2",
				"JoinWithICOSTCENTER select(mapColumn(",
				"          {_key_ICOSTCENTER} = Key,",
				"          each(match(stream==\"AddKeyIPRODUCTGROUP2\"),",
				"               /* Input name */$$ = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyICOSTCENTER",
				"JoinWithIPRODUCT select(mapColumn(",
				"          {_key_IPRODUCT} = Key,",
				"          each(match(stream==\"AddKeyICOSTCENTER\"),",
				"               /* Input name */$$ = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyIPRODUCT",
				"AddKeyIPRODUCT, IBUSINESSAREASource join(AddKeyIPRODUCT@BUSINESSAREA == IBUSINESSAREASource@BUSINESSAREA,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithIBUSINESSAREA",
				"JoinWithIBUSINESSAREA select(mapColumn(",
				"          {_key_IBUSINESSAREA} = Key,",
				"          each(match(stream==\"AddKeyIPRODUCT\"))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyIBUSINESSAREA",
				"AddKeyIBUSINESSAREA, ISALESGROUPSource join(AddKeyIBUSINESSAREA@SALESGROUP == ISALESGROUPSource@SALESGROUP,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithISALESGROUP",
				"JoinWithISALESGROUP select(mapColumn(",
				"          {_key_ISALESGROUP} = Key,",
				"          each(match(stream==\"AddKeyIBUSINESSAREA\"))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyISALESGROUP",
				"AddKeyISALESGROUP, ISALESOFFICESource join(AddKeyISALESGROUP@SALESOFFICE == ISALESOFFICESource@SALESOFFICE,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithISALESOFFICE",
				"JoinWithISALESOFFICE select(mapColumn(",
				"          {_key_ISALESOFFICE} = Key,",
				"          each(match(stream==\"AddKeyISALESGROUP\"))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyISALESOFFICE",
				"AddKeyISALESOFFICE, IWAREHOUSESource join(AddKeyISALESOFFICE@WAREHOUSE == IWAREHOUSESource@WAREHOUSE,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> JoinWithIWAREHOUSE",
				"JoinWithIWAREHOUSE select(mapColumn(",
				"          {_key_IWAREHOUSE} = Key,",
				"          each(match(stream==\"AddKeyISALESOFFICE\"))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AddKeyIWAREHOUSE",
				"IPROFITCENTERSource select(mapColumn(",
				"          CONTROLLINGAREA,",
				"          PROFITCENTER,",
				"          {_SystemName},",
				"          Key,",
				"          {_ISOLanguage}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectIPROFITCENTER",
				"SelectIPROFITCENTER aggregate(groupBy(mycols = sha2(256,columns())),",
				"     each(match(true()), $$ = first($$))) ~> distinctIPROFITCENTER",
				"ICOSTCENTERSource select(mapColumn(",
				"          CONTROLLINGAREA,",
				"          COSTCENTER,",
				"          {_SystemName},",
				"          Key,",
				"          {_ISOLanguage}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectICOSTCENTER",
				"SelectICOSTCENTER aggregate(groupBy(mycols = sha2(256,columns())),",
				"     each(match(true()), $$ = first($$))) ~> distinctICOSTCENTER",
				"getTimestamp filter(systemName == $p_systemName) ~> filterLastProcessedTimestampForSystem",
				"filterLastProcessedTimestampForSystem derive(lastProcessedTimestamp = coalesce(lastProcessedTimestamp, toTimestamp('1900-01-01 00:00:00'))) ~> setLastProcessedTimestamp",
				"setLastProcessedTimestamp select(mapColumn(",
				"          lastProcessedTimestamp",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectLastProcessedTimestampPerSystem",
				"GetRecordsWithMaxTimeStampOnly aggregate(newMaxTimestamp = max(toTimestamp(byName('_UpdateTimeStamp')))) ~> getNewMaxTimestamp",
				"getNewMaxTimestamp, selectLastProcessedTimestampPerSystem join(true(),",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> retrieveOldTimestamp",
				"retrieveOldTimestamp derive(CDSViewName = $p_name,",
				"          systemName = $p_systemName,",
				"          lastProcessedTimestamp = coalesce(toTimestamp(byName('newMaxTimestamp')), toTimestamp(byName('lastProcessedTimestamp')))) ~> setRowToUpdateTimestamp",
				"setRowToUpdateTimestamp alterRow(updateIf(true())) ~> allowUpdateLastProcessedTimestamp",
				"AddKeyIWAREHOUSE derive(each(match(startsWith(name,'_key_')&&!in(['_key_IACCOUNTINGDOCUMENTTYPE','_key_IBILLINGBLOCKSTATUS','_key_IDELIVERYBLOCKSTATUS','_key_IOVERALLBILLINGSTATUS'],name)), $$ = coalesce($$, -1))) ~> ReplaceNULLDimensions",
				"DeliveryItemSilverSourceDelete, selectLastProcessedTimestampPerSystem join(toTimestamp(byName('_UpdateTimeStamp')) > lastProcessedTimestamp,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> GetDeletedRecordsWithMaxTimeStampOnly",
				"GetDeletedRecordsWithMaxTimeStampOnly derive({_key_IPLANT} = toInteger(null()),",
				"          {_key_IPROFITCENTER} = toInteger(null()),",
				"          {_key_IDISTRIBUTIONCHANNEL} = toInteger(null()),",
				"          {_key_IDIVISION} = toInteger(null()),",
				"          {_key_ICONTROLLINGAREA} = toInteger(null()),",
				"          {_key_IPRODUCTGROUP2} = toInteger(null()),",
				"          {_key_ICOSTCENTER} = toInteger(null()),",
				"          {_key_IPRODUCT} = toInteger(null()),",
				"          {_key_IBUSINESSAREA} = toInteger(null()),",
				"          {_key_ISALESGROUP} = toInteger(null()),",
				"          {_key_ISALESOFFICE} = toInteger(null()),",
				"          {_key_IWAREHOUSE} = toInteger(null())) ~> AddKeyColumns",
				"AllowDelete sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat('data/',$p_systemName,'/gold/','I_DELIVERYDOCUMENTITEM')),",
				"     mergeSchema: false,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable: true,",
				"     insertable: false,",
				"     updateable: false,",
				"     upsertable: false,",
				"     keys:($p_keyFields),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1) ~> GoldDeleteTarget",
				"AllowUpsert sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     fileSystem: ($p_container),",
				"     folderPath: (concat('data/',$p_systemName,'/gold/','I_DELIVERYDOCUMENTITEM')),",
				"     mergeSchema: false,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable: false,",
				"     insertable: true,",
				"     updateable: false,",
				"     upsertable: true,",
				"     keys:($p_keyFields),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 2) ~> GoldUpsertTarget",
				"AllowDelete sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     store: 'synapseanalytics',",
				"     schemaName: 'dmgold',",
				"     tableName: 'I_DELIVERYDOCUMENTITEM',",
				"     insertable: false,",
				"     updateable: false,",
				"     deletable: true,",
				"     upsertable: false,",
				"     keys:[(\"DELIVERYDOCUMENT\"),(\"DELIVERYDOCUMENTITEM\")],",
				"     allowCopyCommand: true,",
				"     staged: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SQLDeleteTarget",
				"AllowUpsert sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     store: 'synapseanalytics',",
				"     schemaName: ('dmgold'),",
				"     tableName: ($p_name),",
				"     insertable: true,",
				"     updateable: false,",
				"     deletable: false,",
				"     upsertable: true,",
				"     keys:($p_keyFields),",
				"     allowCopyCommand: true,",
				"     staged: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 2,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SQLUpsertTarget",
				"allowUpdateLastProcessedTimestamp sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CDSViewName as string,",
				"          inScope as boolean",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['CDSViewName','systemName'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 3,",
				"     errorHandlingOption: 'stopOnFirstError') ~> updateLastProcessedTimestamp"
			]
		}
	}
}